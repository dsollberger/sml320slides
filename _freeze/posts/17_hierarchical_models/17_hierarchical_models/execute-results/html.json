{
  "hash": "6a81e56245c51e267aab04e690652a4b",
  "result": {
    "markdown": "---\ntitle: \"17: Hierarchical Models\"\nauthor: \"Derek Sollberger\"\ndate: \"2024-04-09\"\nexecute:\n  cache: true\n# format:\n#   revealjs:\n#     scrollable: true\nformat:\n  html:\n    toc: true\n---\n\n\n\\newcommand{\\ds}{\\displaystyle}\n\n# Hierarchical Models\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n**Goal:** Apply group classifications to models\n\n![Jersey City, NJ](jersey_city_wards.png)\n\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-1_52234d364364362559f3ebfaf43586d8'}\n\n```{.r .cell-code}\nlibrary(\"bayesplot\")\nlibrary(\"bayesrules\")\nlibrary(\"ggtext\")\nlibrary(\"janitor\")\nlibrary(\"patchwork\")\nlibrary(\"rstan\")\nlibrary(\"rstanarm\")\nlibrary(\"tidyverse\")\n\nknitr::opts_chunk$set(echo = TRUE)\n\nairbnb_raw <- readr::read_csv(\"listings.csv\")\n\n# brand colors\n# https://pickcoloronline.com/brands/airbnb/\nairbnb_red <- \"#FF5A5F\"\nairbnb_green <- \"#00A699\"\nairbnb_orange <- \"#FC642D\"\nairbnb_black <- \"#484848\"\nairbnb_gray <- \"#767676\"\n```\n:::\n\n:::\n\n::::\n\n## Data\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n* source: [Airbnb](https://insideairbnb.com/get-the-data/) listings\n* 22 December, 2023\n* \"Summary information and metrics for listings in Jersey City (good for visualisations).\"\n\nBefore data wrangling:\n\n* 1549 observations\n* 18 variables\n\n\n\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n![Jersey City, NJ](jersey_city_broad.png)\n:::\n\n::::\n\n## Data Wrangling\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\n* extracted `ward` classification\n* nonzero `availablity_365`\n* excluded rare \"Hotel\" or \"Shared Room\" listing\n* removed observations with missing values\n\nAfter data wrangling:\n\n* 1348 observations\n* 7 variables\t\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-2_96ad33234019a3d6fc2b5b22f435dd3f'}\n\n```{.r .cell-code}\nairbnb_df <- airbnb_raw |>\n  mutate(ward = stringr::str_sub(neighbourhood,6,6)) |>\n  select(price, host_id, number_of_reviews, availability_365, \n         room_type, ward) |>\n  filter(availability_365 > 0) |>\n  filter(room_type %in% c(\"Entire home/apt\", \"Private room\")) |>\n  na.omit() |>\n  group_by(host_id) |>\n  mutate(listings = n()) |>\n  ungroup()\n```\n:::\n\n\n:::\n\n::::\n\n## Exploratory Data Analyses\n\n::::: {.panel-tabset}\n\n## Reviews\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-3_d818888f36f6c5a4f274f02b924490f2'}\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-4_699833034cfce7349b28da7e0b913577'}\n\n```{.r .cell-code}\nairbnb_df |>\n  ggplot(aes(x = number_of_reviews, y = price)) +\n  geom_point(color = \"#767676\") +\n  labs(title = \"Airbnb Data\",\n       subtitle = \"Price versus number of reviews\",\n       caption = \"SML 320\",\n       x = \"number of reviews\",\n       y = \"price\") +\n  theme_minimal()\n```\n:::\n\n\n## Availability\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-5_f37d2ec05ed8c18700c44b07cd7877ef'}\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-6_e695ba8df9bd79ac0ed979a04dd26f2f'}\n\n```{.r .cell-code}\nairbnb_df |>\n  ggplot(aes(x = availability_365)) +\n  geom_density(color = \"#484848\", fill = \"#FC642D\") +\n  labs(title = \"Airbnb Data\",\n       subtitle = \"Availability over calendar year\",\n       caption = \"SML 320\",\n       x = \"availability\",\n       y = \"\") +\n  theme_minimal() +\n  theme(axis.text.y = element_blank(),\n        axis.ticks.y = element_blank())\n```\n:::\n\n\n## Type\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-7_a090d851da298bbdb38b606099d51b65'}\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-8_4b303a121069bc56e05130484f4d128f'}\n\n```{.r .cell-code}\nairbnb_df |>\n  ggplot(aes(x = room_type, fill = room_type)) +\n  geom_bar(stat = \"count\") +\n  labs(title = \"Airbnb Data\",\n       subtitle = \"Listing Types\",\n       caption = \"SML 320\",\n       x = \"\",\n       y = \"count\") +\n  scale_fill_manual(values = c(\"#FF5A5F\", \"#00A699\")) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n:::\n\n\n## Ward\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-9_76ca5bde226fc80d67dda899c24d00d8'}\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-10_f61baa445820fa729cc20ec32a16c272'}\n\n```{.r .cell-code}\nairbnb_df |>\n  ggplot(aes(x = ward, fill = ward)) +\n  geom_bar(stat = \"count\") +\n  labs(title = \"Airbnb Data\",\n       subtitle = \"ward\",\n       caption = \"SML 320\",\n       x = \"\",\n       y = \"count\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n:::\n\n\n:::::\n\n# Complete Pooling\n\n::::: {.panel-tabset}\n\n## Math\n\n$$Y_{i} | \\beta_{0}, \\beta_{1}, \\beta_{2}, \\sigma \\sim \\text{N}(\\mu_{i}, \\sigma^{2}) \\text{ with } \\mu_{i} = \\beta_{0} + \\beta_{1}X_{i1} + \\beta_{2}X_{i2}$$\n\n* using one pool of information\n\n## Stan\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-11_337469fbee07178ca1d7ff0bcf0a47c7'}\n\n```{.r .cell-code}\ncomplete_pooled_model <- rstanarm::stan_glm(\n  price ~ number_of_reviews + availability_365,\n  data = airbnb_df,\n  family = gaussian,\n  chains = 4, iter = 5000*2, refresh = 0, seed = 320)\n```\n:::\n\n\n## Diagnostics\n\n::: {.callout-note collapse=\"true\"}\n## Function\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-12_b0a7a9a7f654e90c09f1626554d1c951'}\n\n```{.r .cell-code}\nmodel_diagnostics <- function(the_stan_model){\n  p1 <- bayesplot::mcmc_trace(the_stan_model, size = 0.1) +\n  labs(title = \"MCMC Traces\")\n  print(p1)\n  \n  p2 <- bayesplot::mcmc_dens_overlay(the_stan_model) +\n  labs(title = \"Density Plots\")\n  print(p2)\n  \n  p3 <- bayesplot::mcmc_acf(the_stan_model) +\n  labs(title = \"Autocorrelations\")\n  print(p3)\n  \n  # effective sample size\n  print(\"Effective Sample Size:\")\n  print(bayesplot::neff_ratio(the_stan_model))\n  \n  # split-R metric\n  print(\"R-Hat\")\n  print(bayesplot::rhat(the_stan_model))\n}\n```\n:::\n\n\n:::\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-13_44637713ba1382321376aaf5756ae1e5'}\n\n```{.r .cell-code}\nmodel_diagnostics(complete_pooled_model)\n```\n\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-13-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Effective Sample Size:\"\n      (Intercept) number_of_reviews  availability_365             sigma \n          1.24920           1.17580           1.26975           1.20460 \n[1] \"R-Hat\"\n      (Intercept) number_of_reviews  availability_365             sigma \n        0.9999354         0.9999119         1.0000275         1.0000168 \n```\n:::\n:::\n\n\n\n## Model Stats\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-14_29b912986f4b52bdb593c2661e3cb45d'}\n\n```{.r .cell-code}\nbroom.mixed::tidy(complete_pooled_model,\n                  conf.int = TRUE, conf.level = 0.90) |>\n  mutate_if(is.numeric, round, digits = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 Ã— 5\n  term              estimate std.error conf.low conf.high\n  <chr>                <dbl>     <dbl>    <dbl>     <dbl>\n1 (Intercept)       140.        9.96   124.       157.   \n2 number_of_reviews  -0.0913    0.0717  -0.209      0.025\n3 availability_365    0.154     0.0371   0.0921     0.214\n```\n:::\n:::\n\n\n* `number_of_reviews` not significant\n* `availability_365` significant\n\n## Post1\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-15_ed5cb7cad6113218f1c5586075331e30'}\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-16_58f29755dba2e3436af760df5ec069c4'}\n\n```{.r .cell-code}\nairbnb_df |>\n  filter(listings > 1) |>\n  ggplot(aes(x = number_of_reviews, y = price, group = host_id)) +\n  geom_smooth(method = \"lm\", formula = \"y~x\", se = FALSE, color = \"#767676\") +\n  geom_abline(aes(intercept = 139.9941, slope = -0.0913),\n              color = \"#FF5A5F\", linewidth = 3) +\n  labs(title = \"Posterior Median Model\",\n       subtitle = \"Hosts with multiple listings\",\n       caption = \"SML 320\",\n       x = \"number of reviews\", y = \"price\") +\n  theme_minimal()\n```\n:::\n\n\n## Post2\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-17_b9e9f4c55e53653611af70446142351a'}\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-18_093078bb44d6c0b06abc05f1f474fff3'}\n\n```{.r .cell-code}\nairbnb_df |>\n  filter(listings > 1) |>\n  ggplot(aes(x = availability_365, y = price, group = host_id)) +\n  geom_smooth(method = \"lm\", formula = \"y~x\", se = FALSE, color = \"#767676\") +\n  geom_abline(aes(intercept = 139.9941, slope = -0.0913),\n              color = \"#00A699\", linewidth = 3) +\n  labs(title = \"Posterior Median Model\",\n       subtitle = \"Hosts with multiple listings\",\n       caption = \"SML 320\",\n       x = \"availability over calendar year\", y = \"price\") +\n  theme_minimal()\n```\n:::\n\n\n:::::\n\n\n# No Pooling\n\n::::: {.panel-tabset}\n\n## Math\n\n$$Y_{ij} | \\beta_{0j}, \\beta_{1j}, \\beta_{2j}, \\sigma \\sim \\text{N}(\\mu_{ij}, \\sigma^{2}) \\text{ with } \\mu_{ij} = \\beta_{0j} + \\beta_{1j}X_{ij1} + \\beta_{2}X_{ij2}$$\n\n* each host $j$ gets their own model\n\n## Post1\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-19_e36eaae73b74869cc1798c35b1e52125'}\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-20_394d4cee94fb1ce6c4dec8dd9a11f7e8'}\n\n```{.r .cell-code}\nmost_listings <- airbnb_df |>\n  arrange(desc(listings)) |>\n  select(host_id, listings) |>\n  distinct() |>\n  slice_max(listings, n = 3)\n\n\nairbnb_df |>\n  filter(host_id %in% most_listings$host_id) |>\n  ggplot(aes(x = number_of_reviews, y = price)) +\n  geom_point(color = \"#484848\") +\n  geom_smooth(method = \"lm\", formula = \"y~x\",\n              color = \"#FF5A5F\",\n              fullrange = TRUE, se = FALSE) +\n  facet_wrap(~host_id) +\n  labs(title = \"Airbnb Data\",\n       subtitle = \"4 Hosts (by ID)\",\n       caption = \"SML 320\",\n       x = \"number of reviews\", y = \"price\") +\n  theme_minimal()\n```\n:::\n\n\n## Post2\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-21_6c446a8335b944e1ac3453a3c06788b0'}\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-22_fb8317f645179bf94c9d715fc7cf6b42'}\n\n```{.r .cell-code}\nairbnb_df |>\n  filter(host_id %in% most_listings$host_id) |>\n  ggplot(aes(x = availability_365, y = price)) +\n  geom_point(color = \"#484848\") +\n  geom_smooth(method = \"lm\", formula = \"y~x\",\n              color = \"#00A699\",\n              fullrange = TRUE, se = FALSE) +\n  facet_wrap(~host_id) +\n  labs(title = \"Airbnb Data\",\n       subtitle = \"4 Hosts (by ID)\",\n       caption = \"SML 320\",\n       x = \"availability over calendar year\", y = \"price\") +\n  theme_minimal()\n```\n:::\n\n\n:::::\n\n\n# Motivation\n\nComplete Pooling:\n\n* assumed independence between observations\n\n    * but observations can be correlated within a group\n\n* information about individual listings irrelevant toward larger model\n\n    * may offer misleading conclusions\n\nNo Pooling:\n\n* cannot reliably generalize the group-specific no pooled models to groups outside those in our sample\n* No-pooled models assume that one group doesnâ€™t contain relevant information about another\n\n    * especially awkward if a group(s) have small number of observations\n\n\n# Hierarchy\n\n::::: {.panel-tabset}\n\n## Layers\n\nToward **partial-pooled** or **hierarchical** models, we can think in layers:\n\n* Layer 1: $Y_{ij} | \\mu_{j}, \\sigma_{y} \\sim$ how price varies *within* host $j$\n* Layer 2: $\\mu_{j}| \\mu, \\sigma_{\\mu} \\sim$ how price varies *between* hosts\n* Layer 3: $\\mu, \\sigma_{y}, \\sigma_{\\mu} \\sim$ prior models for shared global parameters\n\n## Layer 1\n\nPrice $Y_{ij}$ depends on host $j$\n\n$$Y_{ij} | \\mu_{j}, \\sigma_{y} \\sim \\text{N}(\\mu_{j}, \\sigma_{y}^{2})$$\n\n* $\\mu_{j}$: mean price for host $j$\n* $\\sigma_{y}$: **within-group variability** (i.e. within host $j$)\n\n## Layer 2\n\nHosts are drawn from a broader population (here: `room_type`)\n\n$$\\mu_{j}| \\mu, \\sigma_{\\mu} \\sim \\text{N}(\\mu, \\sigma_{\\mu}^{2})$$\n\n* $\\mu$: **global average** (here: average price for most average host)\n* $\\sigma_{\\mu}$: **between-group variability** (i.e. between hosts)\n\n## Layer 3\n\nSpecify priors for global parameters\n\n* normal distribution for $\\mu$\n* exponential distributions for $\\sigma_{y}$, $\\sigma_{\\mu}$\n\n:::::\n\n# ANOVA\n\n::::: {.panel-tabset}\n\n## Layers\n\nOne-way analysis of variance (ANOVA)\n\n$$\\begin{array}{rrcll}\n  \\text{Layer 1: } & Y_{ij} | \\mu_{j}, \\sigma_{y} & \\sim & \\text{N}(\\mu_{j}, \\sigma_{y}^{2}) & \\text{within host } j \\\\\n  \\text{Layer 2: } & \\mu_{j}| \\mu, \\sigma_{\\mu} & \\sim & \\text{N}(\\mu, \\sigma_{\\mu}^{2}) & \\text{between hosts} \\\\\n  \\text{Layer 3: } & \\mu & \\sim & \\text{N}(m, s^{2}) \\\\\n  ~ & \\sigma_{y} & \\sim & \\text{Exp}(\\ell_{y}) \\\\\n  ~ & \\sigma_{\\mu} & \\sim & \\text{Exp}(\\ell_{\\mu}) \\\\\n\\end{array}$$\n\n## Variance\n\n$$\\text{Total Variance: } \\text{Var}(Y_{ij}) = \\sigma_{y}^{2} + \\sigma_{\\mu}^{2}$$\n\n* variance within groups: \n\n$$\\frac{\\sigma_{y}^{2}}{\\sigma_{\\mu}^{2} + \\sigma_{y}^{2}}$$\n\n* variance between groups: \n\n$$\\frac{\\sigma_{\\mu}^{2}}{\\sigma_{\\mu}^{2} + \\sigma_{y}^{2}}$$\n\n## Correlation\n\nWithin-group correlation assumes independence between groups $i$ and $k$\n\n$$\\text{Cor}(Y_{ij}, Y_{kj}) = \\frac{\\sigma_{\\mu}^{2}}{\\sigma_{\\mu}^{2} + \\sigma_{y}^{2}}$$\n:::::\n\n# Case Study: Ward\n\n::::: {.panel-tabset}\n\n## Complexity\n\n$$6 \\text{ wards } + 3 \\text{ global parameters} = 9 \\text{ model parameters}$$\n\n* group structure `(1|ward)` instead of predictor `ward`\n* prior covariance matrix\n\n## Stan\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-23_3254f0d70475787c8384e9289e8c24e4'}\n\n```{.r .cell-code}\nstart_time <- Sys.time()\n\nward_hier_model <- rstanarm::stan_glmer(\n  price ~ (1 | ward),\n  data = airbnb_df,\n  prior_covariance = decov(reg = 1, conc = 1, shape = 1, scale = 1),\n  chains = 4, iter = 5000*2, refresh = 0, seed = 320)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There were 3 divergent transitions after warmup. See\nhttps://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup\nto find out why this is a problem and how to eliminate them.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Examine the pairs() plot to diagnose sampling problems\n```\n:::\n\n```{.r .cell-code}\nend_time <- Sys.time()\nprint(round(end_time- start_time))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 59 secs\n```\n:::\n:::\n\n\n## Diagnostics\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-24_5304945cafd3e76df52b603e2a06b5a9'}\n\n```{.r .cell-code}\nmodel_diagnostics(ward_hier_model)\n```\n\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-24-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-24-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Effective Sample Size:\"\n                        (Intercept)               b[(Intercept) ward:A] \n                            0.22690                             0.29070 \n              b[(Intercept) ward:B]               b[(Intercept) ward:C] \n                            0.29180                             0.25635 \n              b[(Intercept) ward:D]               b[(Intercept) ward:E] \n                            0.26285                             0.23930 \n              b[(Intercept) ward:F]                               sigma \n                            0.25430                             0.78925 \nSigma[ward:(Intercept),(Intercept)] \n                            0.25960 \n[1] \"R-Hat\"\n                        (Intercept)               b[(Intercept) ward:A] \n                          1.0001606                           1.0000387 \n              b[(Intercept) ward:B]               b[(Intercept) ward:C] \n                          1.0000264                           1.0000263 \n              b[(Intercept) ward:D]               b[(Intercept) ward:E] \n                          1.0000613                           1.0000664 \n              b[(Intercept) ward:F]                               sigma \n                          0.9999946                           1.0000494 \nSigma[ward:(Intercept),(Intercept)] \n                          1.0002827 \n```\n:::\n:::\n\n\n## Model Stats\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-25_ebc9090f6d71de62c22619ee5a633cce'}\n\n```{.r .cell-code}\nbroom.mixed::tidy(ward_hier_model, effects = \"fixed\",\n                  conf.int = TRUE, conf.level = 0.90) |>\n  mutate_if(is.numeric, round, digits = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 Ã— 5\n  term        estimate std.error conf.low conf.high\n  <chr>          <dbl>     <dbl>    <dbl>     <dbl>\n1 (Intercept)     163.      16.3     131.      193.\n```\n:::\n:::\n\n\n## ANOVA\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-26_9f4f297c5d53475cf9900355f806c2a9'}\n\n```{.r .cell-code}\nvar_df <- broom.mixed::tidy(ward_hier_model, effects = \"ran_pars\",\n                  conf.int = TRUE, conf.level = 0.90) |>\n  mutate_if(is.numeric, round, digits = 4)\n\nvar_df #print\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 Ã— 3\n  term                    group    estimate\n  <chr>                   <chr>       <dbl>\n1 sd_(Intercept).ward     ward         47.0\n2 sd_Observation.Residual Residual    154. \n```\n:::\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n## Function\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-27_7377068c84e6f9dbea67cecbe4f92595'}\n\n```{.r .cell-code}\nExtract_Variances <- function(V){\n  v1 <- unlist(V[1,3]^2 / (V[1,3]^2 + V[2,3]^2)) |> round(digits = 4)\n  v2 <- unlist(V[2,3]^2 / (V[1,3]^2 + V[2,3]^2)) |> round(digits = 4)\n  \n  print(paste0(\"Within Group Variance: \", v1))\n  print(paste0(\"Between Group Variance: \", v2))\n}\n```\n:::\n\n:::\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-28_fa9f94a7aa7e8378f50c3bb562fc0c76'}\n\n```{.r .cell-code}\nExtract_Variances(var_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Within Group Variance: 0.0854\"\n[1] \"Between Group Variance: 0.9146\"\n```\n:::\n:::\n\n\n:::::\n\n## Predictions\n\n::::: {.panel-tabset}\n\n## Viz\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-29_b4226f108f341ce0b80a9580b0f164c9'}\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-30_ba7544c5d3ba20efd8b9cc2823e50b0a'}\n\n```{.r .cell-code}\nset.seed(320)\nward_preds <- rstanarm::posterior_predict(\n  ward_hier_model, \n  newdata = data.frame(ward = c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\")))\n\nbayesplot::mcmc_areas(ward_preds, prob = 0.8) +\n  labs(title = \"Posterior Distributions for Airbnb Prices\",\n       subtitle = \"For each ward in Jersey City\",\n       caption = \"SML 320\",\n       x = \"price\", y = \"ward\") +\n  scale_y_discrete(labels = c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"))\n```\n:::\n\n\n:::::\n\n\n# Case Study: Room Types\n\n::::: {.panel-tabset}\n\n## Complexity\n\n* group: 2 room types\n* 2 numerical predictor variables\n* 3 global parameters\n* 7 model parameters\n\n## Stan\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-31_44e59f675090aa4de6ccb13d558bd00d'}\n\n```{.r .cell-code}\nstart_time <- Sys.time()\n\ntype_hier_model <- rstanarm::stan_glmer(\n  price ~ number_of_reviews + availability_365 + (1 | room_type),\n  data = airbnb_df,\n  prior_covariance = decov(reg = 1, conc = 1, shape = 1, scale = 1),\n  chains = 4, iter = 5000*2, refresh = 0, seed = 320)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There were 70 divergent transitions after warmup. See\nhttps://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup\nto find out why this is a problem and how to eliminate them.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Examine the pairs() plot to diagnose sampling problems\n```\n:::\n\n```{.r .cell-code}\nend_time <- Sys.time()\nprint(round(end_time- start_time))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 6 mins\n```\n:::\n:::\n\n\n## Diagnostics\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-32_af697d83eab806581b21740c6666662c'}\n\n```{.r .cell-code}\nmodel_diagnostics(type_hier_model)\n```\n\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-32-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-32-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Effective Sample Size:\"\n                             (Intercept) \n                                 0.26980 \n                       number_of_reviews \n                                 0.89275 \n                        availability_365 \n                                 0.91800 \nb[(Intercept) room_type:Entire_home/apt] \n                                 0.26820 \n   b[(Intercept) room_type:Private_room] \n                                 0.26835 \n                                   sigma \n                                 0.92480 \nSigma[room_type:(Intercept),(Intercept)] \n                                 0.32420 \n[1] \"R-Hat\"\n                             (Intercept) \n                               1.0008789 \n                       number_of_reviews \n                               1.0001037 \n                        availability_365 \n                               1.0001513 \nb[(Intercept) room_type:Entire_home/apt] \n                               1.0008949 \n   b[(Intercept) room_type:Private_room] \n                               1.0008290 \n                                   sigma \n                               0.9998631 \nSigma[room_type:(Intercept),(Intercept)] \n                               1.0010121 \n```\n:::\n:::\n\n\n## Model Stats\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-33_3ad8e4ced1593ef3ac05166883c23d42'}\n\n```{.r .cell-code}\nbroom.mixed::tidy(type_hier_model, effects = \"fixed\",\n                  conf.int = TRUE, conf.level = 0.90) |>\n  mutate_if(is.numeric, round, digits = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 Ã— 5\n  term              estimate std.error conf.low conf.high\n  <chr>                <dbl>     <dbl>    <dbl>     <dbl>\n1 (Intercept)        130.      73.0    -32.5      292.   \n2 number_of_reviews   -0.156    0.0656  -0.263     -0.048\n3 availability_365     0.141    0.0348   0.0841     0.196\n```\n:::\n:::\n\n\n## ANOVA\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-34_c9ddc42d422a99068214281ec39d08e8'}\n\n```{.r .cell-code}\nvar_df <- broom.mixed::tidy(type_hier_model, effects = \"ran_pars\",\n                  conf.int = TRUE, conf.level = 0.90) |>\n  mutate_if(is.numeric, round, digits = 4)\n\nvar_df #print\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 Ã— 3\n  term                     group     estimate\n  <chr>                    <chr>        <dbl>\n1 sd_(Intercept).room_type room_type     163.\n2 sd_Observation.Residual  Residual      145.\n```\n:::\n:::\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-35_2f6c8fb959c130b3020c21077b8ea937'}\n\n```{.r .cell-code}\nExtract_Variances(var_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Within Group Variance: 0.5594\"\n[1] \"Between Group Variance: 0.4406\"\n```\n:::\n:::\n\n\n:::::\n\n## Predictions\n\n::::: {.panel-tabset}\n\n## Viz\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-36_30bc25fafdd320587b9a0b2bc0d7fc6a'}\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-37_6d63fdc0b8b8178e96154c188ec12159'}\n\n```{.r .cell-code}\nset.seed(320)\ntype_preds <- rstanarm::posterior_predict(\n  type_hier_model, \n  newdata = data.frame(number_of_reviews = 100,\n                       availability_365 = 200,\n                       room_type = c(\"Entire home/apt\", \"Private room \")))\n\nbayesplot::mcmc_areas(type_preds, prob = 0.8) +\n  labs(title = \"Posterior Distributions for Airbnb Prices\",\n       subtitle = \"Host with 100 reviews and 200 days/year availability\",\n       caption = \"SML 320\",\n       x = \"price\", y = \"room type\") +\n  scale_y_discrete(labels = c(\"Entire home/apt\", \"Private room \"))\n```\n:::\n\n\n:::::\n\n# Shinkage\n\n::::: {.panel-tabset}\n\n## Viz1\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-38_b6d16c3221cbdae8c1b679095d3603a8'}\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\n## Code1\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-39_10108e11fc80170b6b2cc92a15e3970c'}\n\n```{.r .cell-code}\nglobal_mean <- mean(airbnb_df$price)\n\nbayesplot::mcmc_areas(ward_preds, prob = 0.8) +\n  geom_vline(xintercept = global_mean, color = \"#484848\", \n             linewidth = 2) +\n  labs(title = \"Posterior Distributions for Airbnb Prices\",\n       subtitle = \"For each ward in Jersey City\",\n       caption = \"SML 320\",\n       x = \"price\", y = \"ward\") +\n  scale_y_discrete(labels = c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"))\n```\n:::\n\n\n## Viz2\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-40_7ae896480508588315f09060ca570266'}\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n\n## Code2\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-41_4fd911e8700e4ede73081d28bde97f9d'}\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n\n:::::\n\n## Means\n\n* global mean\n\n$$\\bar{y}_{\\text{global}} = \\ds\\frac{1}{n}\\sum_{i,j} y_{ij}$$\n\n* group mean\n\n$$\\bar{y}_{j} = \\ds\\frac{1}{n_{j}}\\sum_{i=1}^{n_{j}} y_{ij}$$\n\n## Definition\n\n**Shrinkage** refers to the phenomenon in which the group-specific local trends in a hierarchical model are pulled or shrunk toward the global trends.\n\n$$\\ds\\frac{\\sigma_{y}^{2}}{\\sigma_{y}^{2} + n_{j}\\sigma_{\\mu}^{2}} \\cdot \\bar{y}_{\\text{global}} + \\ds\\frac{n_{j}\\sigma_{\\mu}^{2}}{\\sigma_{y}^{2} + n_{j}\\sigma_{\\mu}^{2}} \\cdot \\bar{y}_{j}$$\n\n* $n_{j}$ decreases $\\rightarrow$ shrinkage increases (i.e. rely more on global trends)\n* $\\sigma_{y} > \\sigma_{\\mu} \\rightarrow$ shrinkage increases (i.e. more within group variance than between group variance)\n\n\n# Model Evaluation\n\n## Posterior Predictive Check\n::::: {.panel-tabset}\n\n## Viz\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-42_6b6e9bc8bba18ccc93e313789fc741d4'}\n::: {.cell-output-display}\n![](17_hierarchical_models_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-43_5e0e3b565a643a33336368c838ecdd7d'}\n\n```{.r .cell-code}\np1 <- bayesplot::pp_check(ward_hier_model) +\n  labs(title = \"Ward Hierarchical Model\", x = \"price\") +\n  theme_minimal() +\n  theme(axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        legend.position = \"none\")\np2 <- bayesplot::pp_check(type_hier_model) +\n  labs(title = \"Room Type Hierarchical Model\", x = \"price\") +\n  theme_minimal() +\n  theme(axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        legend.position = \"bottom\")\n\np1 + p2\n```\n:::\n\n\n:::::\n\n## Median Absolute Error\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-44_9a29ea0d5586b01589aaa5b212f60504'}\n\n```{.r .cell-code}\nset.seed(320)\nbayesrules::prediction_summary(ward_hier_model, data = airbnb_df) |>\n  mutate_if(is.numeric, round, digits = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      mae mae_scaled within_50 within_95\n1 72.5942     0.4707    0.7181    0.9592\n```\n:::\n:::\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-45_0822cdfc9f78df2eee40bc91d8a0bd01'}\n\n```{.r .cell-code}\nset.seed(320)\nbayesrules::prediction_summary(type_hier_model, data = airbnb_df) |>\n  mutate_if(is.numeric, round, digits = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      mae mae_scaled within_50 within_95\n1 53.0925     0.3673    0.7871    0.9651\n```\n:::\n:::\n\n\n\n# Summary\n\nHierarchical models (AKA partial pooled models)\n\n* assumes independence between groups (but allows correlation within groups)\n* group-specific parameters $\\mu_{j}$ describe group-specific trends\n* global parameters describe broader population\n* predictions for one group draws from info from other groups (can lead to shrinkage)\n* less variable than no pooling, less biased than complete pooling\n\n\n# Footnotes\n\n* \n\n::: {.callout-note collapse=\"true\"}\n## Session Info\n\n\n::: {.cell hash='17_hierarchical_models_cache/html/unnamed-chunk-46_221217d766d34617130471391c91a530'}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] patchwork_1.1.2    bayesplot_1.10.0   lubridate_1.9.3    forcats_1.0.0     \n [5] stringr_1.5.1      dplyr_1.1.4        purrr_1.0.2        readr_2.1.5       \n [9] tidyr_1.3.1        tibble_3.2.1       ggplot2_3.4.3      tidyverse_2.0.0   \n[13] rstanarm_2.21.4    Rcpp_1.0.11        rstan_2.32.5       StanHeaders_2.32.5\n[17] janitor_2.2.0      ggtext_0.1.2       bayesrules_0.0.2  \n\nloaded via a namespace (and not attached):\n  [1] gridExtra_2.3      inline_0.3.19      rlang_1.1.1       \n  [4] magrittr_2.0.3     snakecase_0.11.0   matrixStats_1.0.0 \n  [7] e1071_1.7-13       compiler_4.3.2     loo_2.6.0         \n [10] callr_3.7.3        vctrs_0.6.5        reshape2_1.4.4    \n [13] pkgconfig_2.0.3    crayon_1.5.2       fastmap_1.1.1     \n [16] ellipsis_0.3.2     labeling_0.4.3     utf8_1.2.4        \n [19] threejs_0.3.3      promises_1.2.1     rmarkdown_2.24    \n [22] tzdb_0.4.0         markdown_1.8       ps_1.7.5          \n [25] nloptr_2.0.3       bit_4.0.5          xfun_0.40         \n [28] jsonlite_1.8.7     later_1.3.1        parallel_4.3.2    \n [31] prettyunits_1.2.0  R6_2.5.1           dygraphs_1.1.1.6  \n [34] stringi_1.8.3      boot_1.3-28.1      knitr_1.43        \n [37] zoo_1.8-12         base64enc_0.1-3    httpuv_1.6.11     \n [40] Matrix_1.6-1.1     splines_4.3.2      igraph_1.4.3      \n [43] timechange_0.3.0   tidyselect_1.2.0   rstudioapi_0.15.0 \n [46] yaml_2.3.8         codetools_0.2-19   miniUI_0.1.1.1    \n [49] curl_5.0.2         processx_3.8.1     pkgbuild_1.4.0    \n [52] lattice_0.21-9     plyr_1.8.8         withr_3.0.0       \n [55] shiny_1.7.5        groupdata2_2.0.2   evaluate_0.21     \n [58] survival_3.5-7     proxy_0.4-27       RcppParallel_5.1.7\n [61] xml2_1.3.6         xts_0.13.1         pillar_1.9.0      \n [64] DT_0.28            stats4_4.3.2       shinyjs_2.1.0     \n [67] generics_0.1.3     vroom_1.6.5        hms_1.1.3         \n [70] rstantools_2.3.1   munsell_0.5.0      scales_1.2.1      \n [73] minqa_1.2.5        gtools_3.9.4       xtable_1.8-4      \n [76] class_7.3-22       glue_1.6.2         tools_4.3.2       \n [79] shinystan_2.6.0    lme4_1.1-33        colourpicker_1.2.0\n [82] grid_4.3.2         QuickJSR_1.1.3     crosstalk_1.2.0   \n [85] colorspace_2.1-0   nlme_3.1-163       cli_3.6.1         \n [88] fansi_1.0.6        V8_4.3.0           gtable_0.3.4      \n [91] digest_0.6.33      farver_2.1.1       htmlwidgets_1.6.2 \n [94] htmltools_0.5.6    lifecycle_1.0.4    mime_0.12         \n [97] bit64_4.0.5        gridtext_0.1.5     shinythemes_1.2.0 \n[100] MASS_7.3-60       \n```\n:::\n:::\n\n:::\n\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\t\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n\n:::\n\n::::\n\n\n::::: {.panel-tabset}\n\n\n\n:::::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}