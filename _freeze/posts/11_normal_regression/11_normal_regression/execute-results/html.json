{
  "hash": "130c76170d3cac586d8f2e44b790fc02",
  "result": {
    "markdown": "---\ntitle: \"11: Normal Regression\"\nauthor: \"Derek Sollberger\"\ndate: \"2024-03-19\"\nexecute:\n  cache: true\n# format:\n#   revealjs:\n#     scrollable: true\nformat:\n  html:\n    toc: true\n# params:\n#   heavy_chunks: \"true\"\n  # heavy_chunks: \"false\"\n---\n\n\n\\newcommand{\\ds}{\\displaystyle}\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-1_2cebec6b06b095e524b026e4608d5d9b'}\n\n```{.r .cell-code}\nlibrary(\"bayesrules\")\nlibrary(\"bayesplot\")\nlibrary(\"broom.mixed\")\nlibrary(\"patchwork\")\nlibrary(\"rstan\")\nlibrary(\"rstanarm\")\nlibrary(\"tidyverse\")\n\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n\n# Data\n## San Francisco Rental Market\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n* source: [TidyTuesday](https://github.com/rfordatascience/tidytuesday/tree/master/data/2022/2022-07-05)\n* 2022-07-05\n* [Pennington, Kate](https://matrix.berkeley.edu/research-article/kate-pennington-on-gentrification-and-displacement-in-san-francisco/) (2018). *Bay Area Craigslist Rental Housing Posts, 2000-2018*. Retrieved from https://github.com/katepennington/historic_bay_area_craigslist_housing_posts/blob/master/clean_2000_2018.csv.zip.\n\n    * Craigslist listings\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n![SF Counties](sf_counties.png)\n:::\n\n::::\n\n## SF Rent Dataset\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n### Response Variable\n\n* Y: price (in US dollars)\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n### Predictor Variables\n\nSome possible predictable variables include\n\n* area (sq feet of rental)\n* number of bedrooms\n* number of bathrooms\n* county\n* year\n* latitude/longitude\n:::\n\n::::\n\n## Loading\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-2_54a30379b5d01ffefa6bb2059353781c'}\n\n```{.r .cell-code}\nrent_raw <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-07-05/rent.csv')\n```\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-3_d1cad2fb09866f4d871db8333560307d'}\n\n:::\n\n\n## Wrangling\n\n* filtered out lowest 5 percent and largest 5 percent of rentals (by price)\n* filtered out lowest 5 percent and largest 5 percent of rentals (by area)\n* at least year 2009 (i.e. decade from 2009 to 2018)\n* 55143 observations\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-4_1dc87b7a7cd09b98342ae5e3227a3323'}\n\n```{.r .cell-code}\nrent_df <- rent_raw |>\n  filter(price >= 800 & price <= 5000) |>\n  filter(sqft >= 500 & sqft <= 2500) |>\n  filter(year >= 2009)\n```\n:::\n\n\n\n# EDA\n\n::::: {.panel-tabset}\n\n## Price\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-5_9ed26886bcf798fa411bf9f49cb860f4'}\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-6_637b861940e927d6f7cb49c56679936a'}\n\n```{.r .cell-code}\nrent_df |>\n  ggplot(aes(x = price)) +\n  geom_density(fill = \"purple\") +\n  labs(title = \"SF Rent: Monthly Rent\",\n       subtitle = \"2000 to 2018\",\n       caption = \"Source: Tidy Tuesday\",\n       x = \"price (USD)\") +\n  theme_minimal()\n```\n:::\n\n\n## Area\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-7_1341f45e975cf0fd96072184a7daad2f'}\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-8_4309973904b83eea18bda81ec369c2d5'}\n\n```{.r .cell-code}\nrent_df |>\n  ggplot(aes(x = sqft)) +\n  geom_density(fill = \"blue\") +\n  labs(title = \"SF Rent: Area\",\n       subtitle = \"2000 to 2018\",\n       caption = \"Source: Tidy Tuesday\",\n       x = \"area (square feet)\") +\n  theme_minimal()\n```\n:::\n\n\n## Bedrooms\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-9_e076eb89690d84291d989f6906e26b40'}\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-10_cd904c4ca93acf7b4f1b1cad7a5d1a60'}\n\n```{.r .cell-code}\nrent_df |>\n  ggplot(aes(x = beds)) +\n  geom_bar(fill = \"red\", stat = \"count\") +\n  labs(title = \"SF Rent: Bedrooms\",\n       subtitle = \"2000 to 2018\",\n       caption = \"Source: Tidy Tuesday\",\n       x = \"number of bedrooms\") +\n  theme_minimal()\n```\n:::\n\n\n## Bathrooms\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-11_aebd9b3d9edce0f0e28ca5e362002d6d'}\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-12_edb5f1cc3eab17b7a581fc6339474050'}\n\n```{.r .cell-code}\nrent_df |>\n  ggplot(aes(x = baths)) +\n  geom_bar(fill = \"orange\", stat = \"count\") +\n  labs(title = \"SF Rent: Bathrooms\",\n       subtitle = \"2000 to 2018\",\n       caption = \"Source: Tidy Tuesday\",\n       x = \"number of bathrooms\") +\n  theme_minimal()\n```\n:::\n\n\n## Year\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-13_ee4c33cff75ee81957db4c03a7d83f4e'}\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-14_823c3818e64c211262501c97e2b67fb5'}\n\n```{.r .cell-code}\nrent_df |>\n  ggplot(aes(x = year)) +\n  geom_bar(fill = \"gray50\", stat = \"count\") +\n  labs(title = \"SF Rent Dataset\",\n       subtitle = \"2000 to 2018\",\n       caption = \"Source: Tidy Tuesday\",\n       x = \"year\") +\n  scale_x_continuous(name = \"year\", \n                   breaks = 2009:2018, \n                   labels = as.character(2009:2018)) +\n  theme_minimal()\n```\n:::\n\n\n:::::\n\n\n# Linear Regression\n\n::::: {.panel-tabset}\n\n## Objective\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\nWhat is the expected monthly rent for a property of 1500 square feet in size?\t\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n![as seen on Full(er) House](full_house_exterior.png)\n:::\n\n::::\n\n## Scatterplot\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-15_0b9ee0961b5add76e7e0015519a91835'}\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-16_d5ac516281a474a3ecd23b986f73bd27'}\n\n```{.r .cell-code}\nrent_df |>\n  ggplot(aes(x = sqft, y = price)) +\n  geom_point(color = \"gray75\") +\n  labs(title = \"SF Rent Dataset\",\n       subtitle = \"2000 to 2018\",\n       caption = \"Source: Tidy Tuesday\",\n       x = \"area (square feet)\",\n       y = \"price (USD)\") +\n  theme_minimal()\n```\n:::\n\n\n## Model\n\n$$y = a + bx$$\n\n* y: response variable (price, in USD)\n* x: area (in square feet)\n* a: intercept\n* b: slope coefficient\n\n## Hypotheses\n\nWhere does the line go?\n\n![](lin_reg_lines.gif)\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-17_1d55ce5e34edb0ba5b61c346215933d0'}\n\n```{.r .cell-code}\nfor(i in 1:25){\n  this_plot <- rent_df |>\n    ggplot(aes(x = sqft, y = price)) +\n    geom_point(color = \"gray75\") +\n    geom_abline(intercept = rnorm(1, 1500, 500),\n                slope = rnorm(1, 0.90, 0.25),\n                color = \"red\") +\n    labs(title = \"Linear Regression\",\n         subtitle = \"Where does the line go?\",\n         caption = \"Source: Tidy Tuesday\",\n         x = \"area (square feet)\",\n         y = \"price (USD)\") +\n    theme_minimal()\n  \n  ggsave(filename = paste0(\"for_animations/lin_reg_plot_\", i, \".png\"),\n         plot = this_plot)\n}\n\n# then combined using the website https://ezgif.com/\n```\n:::\n\n\n## MLS\n\n### Method of Least Squares\n\nLike our derivation of formulas for variance and standard deviation, scientists decided to square the residuals (focus on size of residuals, avoid positive versus negative signs).  Let the *total error* be\n\n$$E(a,b) = \\ds\\sum_{i = 1}^{n} (y_{i} - \\hat{y}_{i})^{2} = \\ds\\sum_{i = 1}^{n} (y_{i} - a - bx_{i})^{2} $$\n\n- The ``best-fit line'' minimizes the error.\n- To minimize the error, start by setting the partial derivatives equal to zero:\n\n$$\\ds\\frac{\\partial E}{\\partial a} = 0, \\quad \\ds\\frac{\\partial E}{\\partial b} = 0$$\n\nThankfully, the function $E(a,b)$ is an elliptical paraboloid, so there is a global minimum at the critical point, and that minimum is found where\n\n$$a = \\ds\\frac{ (\\sum y_{i})(\\sum x_{i}^{2}) - (\\sum x_{i})(\\sum x_{i}y_{i}) }{ n\\sum x_{i}^{2} - (\\sum x_{i})^{2} }, \\quad b = \\ds\\frac{ n\\sum x_{i}y_{i} - (\\sum x_{i})(\\sum y_{i}) }{ n\\sum x_{i}^{2} - (\\sum x_{i})^{2} }$$\n\n## Best-Fit Line\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-18_69871a71c07c48f6be122468f07b3ce2'}\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-19_3a49ae967246418541feb37ecb4f7965'}\n\n```{.r .cell-code}\nlin_fit <- lm(price ~ sqft, data = rent_df)\na <- lin_fit$coefficients[1]\nb <- lin_fit$coefficients[2]\n\nrent_df |>\n  ggplot(aes(x = sqft, y = price)) +\n  geom_point(color = \"gray75\") +\n  geom_smooth(method = \"lm\", color = \"red\") +\n  labs(title = \"Linear Regression\",\n       subtitle = paste0(\"y = \", round(a,4), \" + \", round(b,4), \"x\"),\n       caption = \"Source: Tidy Tuesday\",\n       x = \"area (square feet)\",\n       y = \"price (USD)\") +\n  theme_minimal()\n```\n:::\n\n\n## Inference\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\nAs a rate of change, the coefficient $b$ is interpretable.\n\n$$b \\approx 0.8992$$\n\nFor every one unit increase in square feet, the monthly rent increases by about 90 cents.\n\t\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-20_e47d4a29a6ab0fba4fa994cbeff66797'}\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n:::\n\n::::\n\n\n\n## Prediction\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-21_dfb865596dba5657b455e33ed61ed3cd'}\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-22_204e2e114283626d4af9ea034adc16e5'}\n\n```{.r .cell-code}\ny_hat <- predict(lin_fit, newdata = data.frame(sqft = 1500))\n\nrent_df |>\n  ggplot(aes(x = sqft, y = price)) +\n  geom_point(color = \"gray75\") +\n  geom_vline(xintercept = 1500, color = \"blue\", linewidth = 1) +\n  geom_smooth(method = \"lm\", color = \"red\", linewidth = 2) +\n  geom_hline(yintercept = y_hat, color = \"purple\", linewidth = 1) +\n  geom_point(x = 1500, y = y_hat, color = \"purple\", size = 5) +\n  labs(title = paste0(\"A 1500 sq ft house has an expected rent of $\",\n                      round(y_hat), \"per month\"),\n       subtitle = paste0(\"y = \", round(a,4), \" + \", round(b,4), \"(1500)\"),\n       caption = \"Source: Tidy Tuesday\",\n       x = \"area (square feet)\",\n       y = \"price (USD)\") +\n  theme_minimal()\n```\n:::\n\n\n## Adapt\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n* We produced a *point estimate*\n* Can we obtain more predictive information?\n\n    * variability\n    * confidence\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-23_3879d1eb75d8af13406c7f64a49d3534'}\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n:::\n\n::::\n\n:::::\n\n\n# Normal Regression\n\n## Normal Normal\n\nAt first\n\n$$\\begin{array}{rcl}\n  Y|\\mu & \\sim & N(\\mu, \\sigma^{2}) \\\\\n  \\mu & \\sim & N(\\theta, \\tau^{2}) \\\\\n\\end{array}$$\n\nassumed known variability $\\sigma^{2}$\n\n## Sigma\n\nStandard deviation $\\sigma$ is another *unknown parameter*\n\n$$\\begin{array}{rcl}\n  Y|\\mu & \\sim & N(\\mu, \\sigma^{2}) \\\\\n  \\mu & \\sim & N(\\theta, \\tau^{2}) \\\\\n  \\sigma & \\sim & \\text{[some other model]}\n\\end{array}$$\n\n## Local Mean\n\nInstead of estimating a **global mean**\n\n* $\\mu$: average price across all rental sizes\n\nwe can refine the models with a **local mean**\n\n* $\\mu_{i} = \\beta_{0} + \\beta_{1}x_{i}$\n* specific to the rental size\n\n## Capturing Variability\n\n::::: {.panel-tabset}\n\n## Variability\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-24_a269f548f682fcbce8f975127e445f2e'}\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-25_cdc75e3cdf9ec91cc4b1e9bf58020454'}\n\n```{.r .cell-code}\np1 <- rent_df |>\n  mutate(nearby = abs(price - (1439 + 0.899*sqft)) < 1000) |>\n  filter(nearby) |>\n  ggplot(aes(x = sqft, y = price)) +\n  geom_point(color = \"gray75\") +\n  geom_smooth(method = \"lm\", color = \"red\") +\n  labs(title = \"High Variability\",\n       x = \"area (square feet)\",\n       y = \"price (USD)\") +\n  theme_minimal() +\n  ylim(0, 5000)\n\np2 <- rent_df |>\n  mutate(nearby = abs(price - (1439 + 0.899*sqft)) < 250) |>\n  filter(nearby) |>\n  ggplot(aes(x = sqft, y = price)) +\n  geom_point(color = \"gray75\") +\n  geom_smooth(method = \"lm\", color = \"red\") +\n  labs(title = \"Low Variability\",\n       caption = \"SML 320\",\n       x = \"area (square feet)\",\n       y = \"price (USD)\") +\n  theme_minimal() +\n  ylim(0, 5000)\n\n# patchwork\np1 + p2\n```\n:::\n\n\n## Local\n\nParameter $\\sigma$ now represents variability *from the local mean*\n\n$$\\mu_{i} = \\beta_{0} + \\beta_{1}x_{i}$$\n:::::\n\n## Normal Data Model Assumptions\n\n$$Y|\\beta_{0}, \\beta_{1}, \\sigma \\sim \\mu_{i} = \\beta_{0} + \\beta_{1}X_{i}$$\n\n* **Structure of the data**: Accounting for predictor $X$, the observed data $Y_i$ on case $i$ is *independent* of the observed data on any other case $j$.\n* **Structure of the relationship**: The typical $Y$ outcome can be written as a *linear* function of predictor $X$, $\\mu=\\beta_{0} + \\beta_{1}X$.\n* **Structure of the variability**: At any value of predictor $X$, the observed values of $Y$ will vary normally around their average $\\mu$ with *consistent* standard deviation $\\sigma$.\n\n\n# Bayesian Linear Regression\n\n$$\\begin{array}{rcl}\n  Y_{i}|\\beta_{0}, \\beta_{1}, \\sigma & \\sim & N(\\mu_{i}, \\sigma^{2}) \\text{ with } \\mu_{i} = \\beta_{0} + \\beta_{1}X_{1} \\\\\n  \\beta_{0} & \\sim & N(m_{0}, s_{0}^{2}) \\\\\n  \\beta_{1} & \\sim & N(m_{1}, s_{1}^{2}) \\\\\n  \\sigma & \\sim & \\text{Exp}(\\ell) \\\\\n\\end{array}$$\n\n## Tuning Priors\n\n::::: {.panel-tabset}\n\n## Intuition\n\nDomain expertise would help an analyst create some informative priors for the parameters.  Otherwise, I will temporarily use haphazard code (below) to ascertain that\n\n* rental prices tend to be between 900 and 1200 dollars per month\n* for every one square foot increase in area, the rental price tends to increase between -5 and 47 cents\n* rental prices tend to vary with a standard deviation of about 90 dollars\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-26_2ac2896e68b83e124b24346a7f1ede79'}\n\n```{.r .cell-code}\nset.seed(320)\nN <- 1000 # sample size\n\nslopes <- rep(NA, N)\nintercepts <- rep(NA, N)\nranges <- rep(NA, N)\ncenters <- rep(NA,N)\n\nfor(i in 1:N){\n  two_houses <- rent_df |>\n    slice_sample(n = 2) |>\n    select(price, sqft)\n  \n  x1 <- two_houses[1,1] |> unlist()\n  x2 <- two_houses[2,1] |> unlist()\n  y1 <- two_houses[1,2] |> unlist()\n  y2 <- two_houses[2,2] |> unlist()\n  \n  if(x1 == x2){\n    slopes[i] <- NA\n    intercepts[i] <- NA\n  }else{\n    slopes[i] <- (y2 - y1) / (x2 - x1)\n    intercepts[i] <- y1 - slopes[i]*x1\n  }\n  \n  ranges[i] <- abs(y2 - y1)\n  centers[i] <- (y1 + y2) / 2\n}\n\nprint(\"Intercept estimates\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Intercept estimates\"\n```\n:::\n\n```{.r .cell-code}\nprint(round(quantile(intercepts, c(0.3, 0.5, 0.7), na.rm = TRUE)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n 30%  50%  70% \n   6  547 1142 \n```\n:::\n\n```{.r .cell-code}\nprint(\"Slope estimates\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Slope estimates\"\n```\n:::\n\n```{.r .cell-code}\nprint(quantile(slopes, c(0.3, 0.5, 0.7), na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       30%        50%        70% \n-0.0548437  0.1613792  0.4677822 \n```\n:::\n\n```{.r .cell-code}\nprint(\"Deviation estimates\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Deviation estimates\"\n```\n:::\n\n```{.r .cell-code}\nprint(round(quantile(ranges/4, c(0.3, 0.5, 0.7), na.rm = TRUE)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n30% 50% 70% \n 43  88 142 \n```\n:::\n\n```{.r .cell-code}\nprint(\"Centered intercept estimates\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Centered intercept estimates\"\n```\n:::\n\n```{.r .cell-code}\nprint(round(quantile(centers, c(0.3, 0.5, 0.7), na.rm = TRUE)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n 30%  50%  70% \n 901 1041 1203 \n```\n:::\n:::\n\n\n## Prior Dists\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-27_7ae4e6d7ce0466437d94fda2ae0bb235'}\n\n```{.r .cell-code}\np1 <- bayesrules::plot_normal(mean = 547, sd = 1142-547) + \n  labs(title = \"intercept\", x = \"beta_0\", y = \"\") +\n  theme_minimal()\np2 <- bayesrules::plot_normal(mean = 0.16, sd = 0.47-0.16) + \n  labs(title = \"slope\", x = \"beta_1\", y = \"\") +\n  theme_minimal()\np3 <- bayesrules::plot_gamma(shape = 1, rate = 1/88) + \n  labs(title = \"deviation\", x = \"sigma\", y = \"\") +\n  theme_minimal()\n\n# patchwork\np1 + p2 + p3\n```\n\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n## Prior Model\n\n$$\\begin{array}{rcl}\n  Y_{i}|\\beta_{0}, \\beta_{1}, \\sigma & \\sim & N(\\mu_{i}, \\sigma^{2}) \\text{ with } \\mu_{i} = \\beta_{0} + \\beta_{1}X_{1} \\\\\n  \\beta_{0} & \\sim & N(547, 597^{2}) \\\\\n  \\beta_{1} & \\sim & N(0.16, 0.31^{2}) \\\\\n  \\sigma & \\sim & \\text{Exp}(1/88) \\\\\n\\end{array}$$\n\n## Simulation Space\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-28_52d723b876f1934c589dd3c02313f5cc'}\n\n```{.r .cell-code}\nfor(i in 1:25){\n  this_plot <- rent_df |>\n    ggplot(aes(x = sqft, y = price)) +\n    geom_point(color = \"white\") +\n    geom_abline(intercept = rnorm(1, 547, 597),\n                slope = rnorm(1, 0.16, 0.31),\n                color = \"red\") +\n    labs(title = \"Prior Models\",\n         subtitle = \"Simulation Space\",\n         caption = \"SML 320\",\n         x = \"area (square feet)\",\n         y = \"price (USD)\") +\n    theme_minimal()\n  \n  ggsave(filename = paste0(\"for_animations/lin_sim_plot_\", i, \".png\"),\n         plot = this_plot)\n}\n\n# then combined using the website https://ezgif.com/\n```\n:::\n\n\n:::::\n\n## rstan\n\n::::: {.panel-tabset}\n\n## Define Model\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-29_1598ea62ddbcd5fb5f5a17a407048e8e'}\n\n```{.r .cell-code}\nrent_stan_model <- \"\n  data {\n    int<lower = 0> n;\n    vector[n] Y;\n    vector[n] X;\n  }\n  parameters {\n    real beta0;\n    real beta1;\n    real<lower = 0> sigma;\n  }\n  model {\n    Y ~ normal(beta0 + beta1 * X, sigma);\n    beta0 ~ normal(547, 597);\n    beta1 ~ normal(0.16, 0.31);\n    sigma ~ exponential(0.01136364);\n  }\n\"\n```\n:::\n\n\n## Simulation\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-30_9868d4e2ca3f9e21dfee908ae08007fb'}\n\n```{.r .cell-code}\ntime_start <- Sys.time()\n\nrent_df_for_stan <- rent_df |>\n  slice_sample(prop = 0.05)\n\nrent_stan_sim <- \n  stan(model_code = rent_stan_model, \n       data = list(n = nrow(rent_df_for_stan), \n                   Y = rent_df_for_stan$price, \n                   X = rent_df_for_stan$sqft), \n       chains = 4, iter = 5000*2, refresh = 0, seed = 320)\n\ntime_end <- Sys.time()\ntime_end - time_start\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 58.85536 secs\n```\n:::\n:::\n\n\n## Metrics\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-31_b29080e4a95a6f8613f7d18af98b276d'}\n\n```{.r .cell-code}\nbayesplot::mcmc_trace(rent_stan_sim, \n                      pars = c(\"beta0\", \"beta1\", \"sigma\"), \n                      size = 0.1) +\n  labs(title = \"MCMC Traces\")\n```\n\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-32_120fc6f342882c29ca067b6d919ee4dc'}\n\n```{.r .cell-code}\nbayesplot::mcmc_dens_overlay(rent_stan_sim,\n                             pars = c(\"beta0\", \"beta1\", \"sigma\")) +\n  labs(title = \"Density Plots\")\n```\n\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-33_30de5bea82bf93ec38ebf5d1a44bbe06'}\n\n```{.r .cell-code}\nbayesplot::mcmc_acf(rent_stan_sim,\n                    pars = c(\"beta0\", \"beta1\", \"sigma\")) +\n  labs(title = \"Autocorrelations\")\n```\n\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-34_ca6ec39c65b978e0fb64b19b601a6dbd'}\n\n```{.r .cell-code}\nbayesplot::neff_ratio(rent_stan_sim,\n                      pars = c(\"beta0\", \"beta1\", \"sigma\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    beta0     beta1     sigma \n0.3692006 0.3690437 0.4980528 \n```\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-35_edd20551daf4f7589fa474856f473f09'}\n\n```{.r .cell-code}\nbayesplot::rhat(rent_stan_sim,\n                pars = c(\"beta0\", \"beta1\", \"sigma\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    beta0     beta1     sigma \n0.9999020 0.9998856 1.0001496 \n```\n:::\n:::\n\n\n## Posterior Stats\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-36_45f4be260c0a6a91d0361c60ebf20360'}\n\n```{.r .cell-code}\nbroom.mixed::tidy(rent_stan_sim,\n                  effects = c(\"fixed\", \"aux\"),\n                  conf.int = TRUE, conf.level = 0.80) |>\n  mutate_if(is.numeric, round, digits = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 5\n  term  estimate std.error conf.low conf.high\n  <chr>    <dbl>     <dbl>    <dbl>     <dbl>\n1 beta0 1482.      42.5    1428.     1537.   \n2 beta1    0.872    0.0371    0.824     0.919\n3 sigma  805.      10.8     791.      819.   \n```\n:::\n:::\n\n\n:::::\n\n\n# rstanarm\n\n\n\n::::: {.panel-tabset}\n\n## Ready\n\nThe `rstanarm` package provides many convenient pre-defined Bayesian models for *applied regression models*.\n\n::: {.callout-note collapse=\"true\"}\n## Centered Intercept\n\n**Caution**: the `rstanarm` package will estimate the *centered intercept* instead of the usual intercept.\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-37_c5456471ea8191cf2e657e40e29426f8'}\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-38_fe0ba9c76e0516b0ece72d9f959e1d48'}\n\n```{.r .cell-code}\nlin_fit <- lm(price ~ sqft, data = rent_df)\na <- lin_fit$coefficients[1]\nb <- lin_fit$coefficients[2]\ny_bar <- mean(rent_df$price, na.rm = TRUE)\n\n\nrent_df |>\n  ggplot(aes(x = sqft, y = price)) +\n  geom_point(color = \"gray75\") +\n  geom_hline(yintercept = y_bar, color = \"purple\", linewidth = 3) +\n  geom_abline(intercept = a, slope = b, color = \"red\", linewidth = 2) +\n  labs(title = \"Linear Regression\",\n       subtitle = paste0(\"y = \", round(a,4), \" + \", round(b,4), \"x\"),\n       caption = \"Source: Tidy Tuesday\",\n       x = \"area (square feet)\",\n       y = \"price (USD)\") +\n  scale_y_continuous(name = \"\",\n                     breaks = c(a, y_bar),\n                     labels = c(\"beta_0\", \"beta_0c\")) +\n  theme_minimal() +\n  \n  xlim(0, 3000)\n```\n:::\n\n\n:::\n\n## Simulation\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-39_c21e734b24ae3f3bdd3be4056ae4148e'}\n\n```{.r .cell-code}\ntime_start <- Sys.time()\n\nrent_df_for_stan <- rent_df |>\n  slice_sample(prop = 0.05)\n\nrent_stanarm_sim <- stan_glm(price ~ sqft, data = rent_df_for_stan,\n                       family = gaussian,\n                       prior_intercept = normal(1041, 162),\n                       prior = normal(547, 597), \n                       prior_aux = exponential(1/88),\n                       chains = 4, iter = 5000*2, refresh = 0, seed = 84735)\n\ntime_end <- Sys.time()\ntime_end - time_start\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 22.73225 secs\n```\n:::\n:::\n\n\n## Metrics\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-40_dab86cfc5508a89f675bb23ef3f897f0'}\n\n```{.r .cell-code}\nbayesplot::mcmc_trace(rent_stanarm_sim, size = 0.1) +\n  labs(title = \"MCMC Traces\")\n```\n\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-41_c1018b4c4d2463ba1be8145f671d139f'}\n\n```{.r .cell-code}\nbayesplot::mcmc_dens_overlay(rent_stanarm_sim) +\n  labs(title = \"Density Plots\")\n```\n\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-42_cf57d57d898b310cc02e4b6e7e330310'}\n\n```{.r .cell-code}\nbayesplot::mcmc_acf(rent_stanarm_sim) +\n  labs(title = \"Autocorrelations\")\n```\n\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-43_7366e5ab4f04861e30506923d53b9328'}\n\n```{.r .cell-code}\nbayesplot::neff_ratio(rent_stanarm_sim)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept)        sqft       sigma \n    0.81340     0.97695     0.37455 \n```\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-44_9c97ad22ab383c688687ae55b98bd766'}\n\n```{.r .cell-code}\nbayesplot::rhat(rent_stanarm_sim)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept)        sqft       sigma \n  0.9999319   0.9998695   1.0001440 \n```\n:::\n:::\n\n\n## Posterior Stats\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-45_ece8e4ca7a5df255f12fe80d6d0b2cea'}\n\n```{.r .cell-code}\nbroom.mixed::tidy(rent_stanarm_sim,\n                  effects = c(\"fixed\", \"aux\"),\n                  conf.int = TRUE, conf.level = 0.80) |>\n  mutate_if(is.numeric, round, digits = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  term        estimate std.error conf.low conf.high\n  <chr>          <dbl>     <dbl>    <dbl>     <dbl>\n1 (Intercept) 1527.      42.9    1472.     1582.   \n2 sqft           0.803    0.0367    0.755     0.850\n3 sigma        809.      10.8     795.      823.   \n4 mean_PPD    2390.      21.6    2362.     2417.   \n```\n:::\n:::\n\n\n## Comparison\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n## rstan\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-46_18eff870b95e210a47d6887524850c0d'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  term  estimate std.error\n  <chr>    <dbl>     <dbl>\n1 beta0 1482.      42.5   \n2 beta1    0.872    0.0371\n3 sigma  805.      10.8   \n```\n:::\n:::\n\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n## rstanarm\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-47_204d823ff700be12703dab2905862ce2'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  term        estimate std.error\n  <chr>          <dbl>     <dbl>\n1 (Intercept) 1527.      42.9   \n2 sqft           0.803    0.0367\n3 sigma        809.      10.8   \n4 mean_PPD    2390.      21.6   \n```\n:::\n:::\n\n:::\n\n::::\n\n:::::\n\n\n# Autoscale\n\n::::: {.panel-tabset}\n\n## Update Priors\n\n* In this scaling process, `rstanarm` seeks to identify *weakly informative priors*\n* It does not consider the relationship among these variables.\n\n## Simulation\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-48_e43d654a18669ad9ca5ba86f67faf054'}\n\n```{.r .cell-code}\ntime_start <- Sys.time()\n\nrent_df_for_stan <- rent_df |>\n  slice_sample(prop = 0.05)\n\nrent_autoscale_sim <- stan_glm(price ~ sqft, data = rent_df_for_stan,\n                       family = gaussian,\n                       prior_intercept = normal(1041, 162, autoscale = TRUE),\n                       prior = normal(547, 597, autoscale = TRUE),\n                       prior_aux = exponential(1/88, autoscale = TRUE),\n                       chains = 4, iter = 5000*2, refresh = 0, seed = 84735)\n\ntime_end <- Sys.time()\ntime_end - time_start\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 30.99705 secs\n```\n:::\n:::\n\n\n## Metrics\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-49_3d6d876601f4c73fca9c643f1dd561f2'}\n\n```{.r .cell-code}\nbayesplot::mcmc_trace(rent_autoscale_sim, size = 0.1) +\n  labs(title = \"MCMC Traces\")\n```\n\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-49-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-50_f739b778f81ebdbe78891076ac71e9d3'}\n\n```{.r .cell-code}\nbayesplot::mcmc_dens_overlay(rent_autoscale_sim) +\n  labs(title = \"Density Plots\")\n```\n\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-50-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-51_59d97130f26ef3051317770a37d41e32'}\n\n```{.r .cell-code}\nbayesplot::mcmc_acf(rent_autoscale_sim) +\n  labs(title = \"Autocorrelations\")\n```\n\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-51-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-52_d359f11d26489d368c1eeab733376af3'}\n\n```{.r .cell-code}\nbayesplot::neff_ratio(rent_autoscale_sim)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept)        sqft       sigma \n    0.83305     1.00865     0.33455 \n```\n:::\n:::\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-53_5af31a55255b4e049a183d79c042b13d'}\n\n```{.r .cell-code}\nbayesplot::rhat(rent_autoscale_sim)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept)        sqft       sigma \n  0.9999997   1.0000346   1.0006433 \n```\n:::\n:::\n\n\n## Updated Priors\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-54_0623c68c88ddab2f5403df08ded5cd00'}\n\n```{.r .cell-code}\nrstanarm::prior_summary(rent_autoscale_sim)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nPriors for model 'rent_autoscale_sim' \n------\nIntercept (after predictors centered)\n  Specified prior:\n    ~ normal(location = 1041, scale = 162)\n  Adjusted prior:\n    ~ normal(location = 1041, scale = 146074)\n\nCoefficients\n  Specified prior:\n    ~ normal(location = 547, scale = 597)\n  Adjusted prior:\n    ~ normal(location = 547, scale = 1294)\n\nAuxiliary (sigma)\n  Specified prior:\n    ~ exponential(rate = 0.011)\n  Adjusted prior:\n    ~ exponential(rate = 1.3e-05)\n------\nSee help('prior_summary.stanreg') for more details\n```\n:::\n:::\n\n\n\n## Posterior Stats\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-55_7d2327524586bba7ea99a206d0ed3578'}\n\n```{.r .cell-code}\nbroom.mixed::tidy(rent_autoscale_sim,\n                  effects = c(\"fixed\", \"aux\"),\n                  conf.int = TRUE, conf.level = 0.80) |>\n  mutate_if(is.numeric, round, digits = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  term        estimate std.error conf.low conf.high\n  <chr>          <dbl>     <dbl>    <dbl>     <dbl>\n1 (Intercept) 1505.       44.0   1447.     1561.   \n2 sqft           0.862     0.038    0.813     0.911\n3 sigma        828.       11.4    813.      842.   \n4 mean_PPD    2444.       22.2   2416.     2472.   \n```\n:::\n:::\n\n\n## Comparison\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n## rstanarm\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-56_8fd1bc65576e4ee59185567664d9cc2e'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  term        estimate std.error\n  <chr>          <dbl>     <dbl>\n1 (Intercept) 1527.      42.9   \n2 sqft           0.803    0.0367\n3 sigma        809.      10.8   \n4 mean_PPD    2390.      21.6   \n```\n:::\n:::\n\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n## autoscale\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-57_a8d9635b16de481b97e3c700d49dc224'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  term        estimate std.error\n  <chr>          <dbl>     <dbl>\n1 (Intercept) 1505.       44.0  \n2 sqft           0.862     0.038\n3 sigma        828.       11.4  \n4 mean_PPD    2444.       22.2  \n```\n:::\n:::\n\n:::\n\n::::\n\n:::::\n\n# Posterior Distribution\n\n## Many Models\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-58_92f48e746fbd5f49748432ac59ed8cf4'}\n\n```{.r .cell-code}\nrent_model_df <- as.data.frame(rent_autoscale_sim)\n\n# nrow(rent_model_df)\n# 20000 models from 20000 chains\n\nhead(rent_model_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  (Intercept)      sqft    sigma\n1    1605.731 0.8024525 823.1324\n2    1595.615 0.8117000 822.9240\n3    1429.658 0.9107199 835.7474\n4    1536.464 0.8128524 835.6783\n5    1463.692 0.8782975 835.7370\n6    1476.271 0.8683633 833.1336\n```\n:::\n:::\n\n\n## Many Lines\n\n::::: {.panel-tabset}\n\n## Plot\n\n![](bayes_reg_lines.gif)\n\n## Code \n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-59_58b9d84ab11f306bcc13c61bbfeea994'}\n\n```{.r .cell-code}\nfor(i in 1:25){\n  \n  beta_0 <- rent_model_df$`(Intercept)`[i]\n  beta_1 <- rent_model_df$sqft[i]\n  \n  this_plot <- rent_df |>\n    ggplot(aes(x = sqft, y = price)) +\n    geom_point(color = \"gray75\") +\n    geom_vline(xintercept = 1500, color = \"blue\", linewidth = 3) +\n    geom_abline(intercept = beta_0, slope = beta_1,\n                color = \"red\", linewidth = 3) +\n    geom_point(x = 1500, y = beta_0 + beta_1*1500,\n               color = \"purple\", size = 5) +\n    labs(title = \"Bayesian Regression\",\n         subtitle = \"What is the expected monthly rent for a property of 1500 square feet in size?\",\n         caption = \"Source: Tidy Tuesday\",\n         x = \"area (square feet)\",\n         y = \"price (USD)\") +\n    theme_minimal()\n  \n  ggsave(filename = paste0(\"for_animations/bayes_reg_plot_\", i, \".png\"),\n         plot = this_plot)\n}\n\n# then combined using the website https://ezgif.com/\n```\n:::\n\n\n:::::\n\n\n\n\n\n## Evidence\n\n::::: {.panel-tabset}\n\n## Objective\n\nDo we have posterior evidence that there is a positive relationship between area and price?\n\n$$\\beta_{1} > 0?$$\n\n## Visual\n\nIt appears that all of our slopes are positive.\n\n![](bayes_reg_lines.gif)\n\n## Credible Interval\n\nThe credible interval does not contain zero.\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-60_82128307cb41e6cca043d5e38526d105'}\n\n```{.r .cell-code}\nbroom.mixed::tidy(rent_autoscale_sim,\n                  effects = c(\"fixed\", \"aux\"),\n                  conf.int = TRUE, conf.level = 0.80) |>\n  mutate_if(is.numeric, round, digits = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  term        estimate std.error conf.low conf.high\n  <chr>          <dbl>     <dbl>    <dbl>     <dbl>\n1 (Intercept) 1505.       44.0   1447.     1561.   \n2 sqft           0.862     0.038    0.813     0.911\n3 sigma        828.       11.4    813.      842.   \n4 mean_PPD    2444.       22.2   2416.     2472.   \n```\n:::\n:::\n\n\n## Posterior Probability\n\n$$P(\\beta_{1} > 0 | \\vec{y}) \\approx 1$$\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-61_cf21cb06680507d353594843324ac42e'}\n\n```{.r .cell-code}\nrent_model_df |>\n  mutate(slope_exceeds_0 = sqft > 0) |>\n  janitor::tabyl(slope_exceeds_0) |>\n  janitor::adorn_totals()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n slope_exceeds_0     n percent\n            TRUE 20000       1\n           Total 20000       1\n```\n:::\n:::\n\n\n:::::\n\n# Posterior Prediction\n\n## Posterior Predictive Model\n\n$$Y_{\\text{new}} | \\beta_{0}, \\beta_{1}, \\sigma \\sim N(\\mu, \\sigma^{2}) \\text{ with } \\mu = \\beta_{0} + \\beta_{1}*1500$$\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-62_aaf7bfbeee623ffc0b25bf9fcf581a72'}\n\n```{.r .cell-code}\nset.seed(320)\nrent_predict_df <- rent_model_df |>\n  mutate(mu = `(Intercept)` + sqft*1500,\n         y_new = rnorm(20000, mean = mu, sd = sigma))\n```\n:::\n\n\n## Many Models\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-63_3d2b4460a6342542bd0a5a33292f7a0b'}\n\n```{.r .cell-code}\nhead(rent_predict_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  (Intercept)      sqft    sigma       mu    y_new\n1    1605.731 0.8024525 823.1324 2809.410 1096.676\n2    1595.615 0.8117000 822.9240 2813.165 1835.540\n3    1429.658 0.9107199 835.7474 2795.738 2218.671\n4    1536.464 0.8128524 835.6783 2755.743 3398.422\n5    1463.692 0.8782975 835.7370 2781.139 2335.670\n6    1476.271 0.8683633 833.1336 2778.816 2966.288\n```\n:::\n:::\n\n\n## Intervals\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-64_c49604ba3a397ed716dc0e434755168d'}\n\n```{.r .cell-code}\nrent_predict_df |>\n  summarize(lower_mu = quantile(mu, 0.025),\n            upper_mu = quantile(mu, 0.975),\n            lower_new = quantile(y_new, 0.025),\n            upper_new = quantile(y_new, 0.975))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  lower_mu upper_mu lower_new upper_new\n1 2753.982 2841.034  1153.325  4437.741\n```\n:::\n:::\n\n\n* *typical* rent: (2754, 2841)\n* **posterior prediction interval**: (1153, 4437)\n\n## Averaging\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-65_f507ce6c24c4418208e2f03453b7dd2d'}\n\n```{.r .cell-code}\nrent_predict_df |>\n  ggplot(aes(x = mu)) +\n  geom_density(fill = \"purple\") +\n  labs(title = \"Typical Rent\",\n       subtitle = \"distribution for mu\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-65-1.png){width=672}\n:::\n:::\n\n\n\n## Distributions\n\n::::: {.panel-tabset}\n\n## Plots\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-66_be0414433bc56fe4cda122352ea42250'}\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-66-1.png){width=672}\n:::\n:::\n\n## Code\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-67_01a26e1d55657d68dda62bc2e7df8575'}\n::: {.cell-output-display}\n![](11_normal_regression_files/figure-html/unnamed-chunk-67-1.png){width=672}\n:::\n:::\n\n\n:::::\n\n# Credible Prediction\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-68_6503601d2faf22f2b828d5679ab80e49'}\n\n```{.r .cell-code}\nquantile(rent_predict_df$y_new, c(0.025, 0.975))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    2.5%    97.5% \n1153.325 4437.741 \n```\n:::\n:::\n\n\n* The rent for a 1500 sq ft property will probably be in between 1153 and 4438 dollars per month.\n* We can get Bayesian regression models running quickly with the `rstanarm` package and its `autoscale` capabilities\n* The posterior predictive model accounts not only for the *average* rent on a 1500 sq ft property, but also the *individual variability* from that average.\n\n\n\n\n# Footnotes\n\n* [brms](https://www.andrewheiss.com/blog/2022/09/26/guide-visualizing-types-posteriors/) guide to visualizing posterior distributions by Andrew Heiss\n\n![Incomplete Data](incomplete_data.png)\n\n::: {.callout-note collapse=\"true\"}\n## Session Info\n\n\n::: {.cell hash='11_normal_regression_cache/html/unnamed-chunk-69_dc555046fa74e88d6f4d0c72dccb9777'}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] rstanarm_2.21.4     Rcpp_1.0.11         broom.mixed_0.2.9.4\n [4] lubridate_1.9.3     forcats_1.0.0       stringr_1.5.1      \n [7] dplyr_1.1.4         purrr_1.0.2         readr_2.1.5        \n[10] tidyr_1.3.1         tibble_3.2.1        ggplot2_3.4.3      \n[13] tidyverse_2.0.0     rstan_2.32.5        StanHeaders_2.32.5 \n[16] patchwork_1.1.2     janitor_2.2.0       infer_1.0.4        \n[19] bayesplot_1.10.0    bayesrules_0.0.2   \n\nloaded via a namespace (and not attached):\n  [1] gridExtra_2.3      inline_0.3.19      rlang_1.1.1       \n  [4] magrittr_2.0.3     furrr_0.3.1        snakecase_0.11.0  \n  [7] matrixStats_1.0.0  e1071_1.7-13       compiler_4.3.2    \n [10] mgcv_1.9-0         loo_2.6.0          callr_3.7.3       \n [13] vctrs_0.6.5        reshape2_1.4.4     pkgconfig_2.0.3   \n [16] crayon_1.5.2       fastmap_1.1.1      backports_1.4.1   \n [19] ellipsis_0.3.2     labeling_0.4.3     utf8_1.2.4        \n [22] threejs_0.3.3      promises_1.2.1     rmarkdown_2.24    \n [25] tzdb_0.4.0         markdown_1.8       ps_1.7.5          \n [28] nloptr_2.0.3       xfun_0.40          jsonlite_1.8.7    \n [31] later_1.3.1        broom_1.0.5        parallel_4.3.2    \n [34] prettyunits_1.2.0  R6_2.5.1           dygraphs_1.1.1.6  \n [37] stringi_1.8.3      parallelly_1.36.0  boot_1.3-28.1     \n [40] knitr_1.43         zoo_1.8-12         base64enc_0.1-3   \n [43] httpuv_1.6.11      Matrix_1.6-1.1     splines_4.3.2     \n [46] igraph_1.4.3       timechange_0.3.0   tidyselect_1.2.0  \n [49] rstudioapi_0.15.0  yaml_2.3.8         codetools_0.2-19  \n [52] miniUI_0.1.1.1     curl_5.0.2         processx_3.8.1    \n [55] listenv_0.9.0      pkgbuild_1.4.0     lattice_0.21-9    \n [58] plyr_1.8.8         withr_3.0.0        shiny_1.7.5       \n [61] groupdata2_2.0.2   evaluate_0.21      future_1.32.0     \n [64] survival_3.5-7     proxy_0.4-27       RcppParallel_5.1.7\n [67] xts_0.13.1         pillar_1.9.0       DT_0.28           \n [70] stats4_4.3.2       shinyjs_2.1.0      generics_0.1.3    \n [73] hms_1.1.3          rstantools_2.3.1   munsell_0.5.0     \n [76] scales_1.2.1       minqa_1.2.5        globals_0.16.2    \n [79] gtools_3.9.4       xtable_1.8-4       class_7.3-22      \n [82] glue_1.6.2         tools_4.3.2        shinystan_2.6.0   \n [85] lme4_1.1-33        colourpicker_1.2.0 grid_4.3.2        \n [88] QuickJSR_1.1.3     crosstalk_1.2.0    colorspace_2.1-0  \n [91] nlme_3.1-163       cli_3.6.1          fansi_1.0.6       \n [94] V8_4.3.0           gtable_0.3.4       digest_0.6.33     \n [97] farver_2.1.1       htmlwidgets_1.6.2  htmltools_0.5.6   \n[100] lifecycle_1.0.4    mime_0.12          shinythemes_1.2.0 \n[103] MASS_7.3-60       \n```\n:::\n:::\n\n:::\n\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\t\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n\n:::\n\n::::\n\n\n\n::::: {.panel-tabset}\n\n\n\n:::::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}