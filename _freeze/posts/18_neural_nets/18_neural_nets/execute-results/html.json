{
  "hash": "8a32c7496326e245a1fa445da893e233",
  "result": {
    "markdown": "---\ntitle: \"18: Non-Normal Hierarchical Models\"\nauthor: \"Derek Sollberger\"\ndate: \"2024-04-11\"\nexecute:\n  cache: true\n# format:\n#   revealjs:\n#     scrollable: true\nformat:\n  html:\n    toc: true\n---\n\n\n\\newcommand{\\ds}{\\displaystyle}\n\n# Non-Normal Hierarchical Models\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n**Goals:** \n\n* Further explore hierarchical models\n* Apply the Bayesian mindset to neural networks\n\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-1_2d8aa0b5e68cab1b9af128d03d0b3155'}\n\n```{.r .cell-code}\nlibrary(\"bayesplot\")\nlibrary(\"bayesrules\")\nlibrary(\"BLNN\")\nlibrary(\"ggtext\")\nlibrary(\"janitor\")\nlibrary(\"nnet\")\nlibrary(\"patchwork\")\nlibrary(\"rstan\")\nlibrary(\"rstanarm\")\nlibrary(\"tidyverse\")\n\nknitr::opts_chunk$set(echo = TRUE)\n\nairbnb_raw <- readr::read_csv(\"listings.csv\")\n\n# brand colors\n# https://pickcoloronline.com/brands/airbnb/\nairbnb_red <- \"#FF5A5F\"\nairbnb_green <- \"#00A699\"\nairbnb_orange <- \"#FC642D\"\nairbnb_black <- \"#484848\"\nairbnb_gray <- \"#767676\"\n```\n:::\n\n:::\n\n::::\n\n## Data\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n* source: [Airbnb](https://insideairbnb.com/get-the-data/) listings\n* 22 December, 2023\n* \"Summary information and metrics for listings in Jersey City (good for visualisations).\"\n\nBefore data wrangling:\n\n* 1549 observations\n* 18 variables\n\n\n\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n![Jersey City, NJ](jersey_city_broad.png)\n:::\n\n::::\n\n\n## Data Wrangling\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\n* extracted `ward` classification\n* nonzero `availablity_365`\n* excluded rare \"Hotel\" or \"Shared Room\" listing\n* removed observations with missing values\n\nAfter data wrangling:\n\n* 1348 observations\n* 7 variables\t\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-2_8119c55b381ed701c4f9881683654a9b'}\n\n```{.r .cell-code}\nairbnb_df <- airbnb_raw |>\n  mutate(ward = stringr::str_sub(neighbourhood,6,6)) |>\n  select(price, host_id, number_of_reviews, availability_365, \n         room_type, ward) |>\n  filter(availability_365 > 0) |>\n  filter(room_type %in% c(\"Entire home/apt\", \"Private room\")) |>\n  na.omit() |>\n  group_by(host_id) |>\n  mutate(listings = n()) |>\n  ungroup()\n```\n:::\n\n\n:::\n\n::::\n\n## Variables\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n### Response Variable\n\n$Y$: price of Airbnb listing\n\n* numerical response\n\n### Predictor Variables\n\n* $X_{1}$: number of reviews\n* $X_{2}$: availability over year (1 to 365 days)\n* $X_{3}$: room type (entire place or private room)\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n\n\n### Tier Variables\n\n* `ward`: political subdivision of Jersey City\n\n![Jersey City, NJ](jersey_city_wards.png)\n\n:::\n\n::::\n\n\n# Interaction Hierarchies\n\n::::: {.panel-tabset}\n\n## Stan\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-3_80d9ad718cdc0afcc0ef76ac7b7edac8'}\n\n```{.r .cell-code}\nward_intercept_model <- rstanarm::stan_glmer(\n  price ~ number_of_reviews + availability_365 + room_type + \n    (1 | ward), ...)\n\nward_interaction_model <- rstanarm::stan_glmer(\n  price ~ number_of_reviews + availability_365 + room_type + \n    (room_type | ward), ...)\n```\n:::\n\n\n$$\\mu_{ij} = \\beta_{0j} + \\beta_{1}X_{ij1} + \\beta_{2}X_{ij2} + \\beta_{3}X_{ij3}$$\n\n* assumes relationships between price and predictors are similar for each `ward`\n\n$$\\mu_{ij} = \\beta_{0j} + \\beta_{1j}X_{ij1} + \\beta_{2}X_{ij2} + \\beta_{3}X_{ij3}$$\n\n* assumes that the relationship between price and `room_type` might be different for each `ward`\n\n\n## Code\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-4_40412e5649d5cc2873698762cadf07b6'}\n\n```{.r .cell-code}\nstart_time <- Sys.time()\n\nairbnb_for_stan <- airbnb_df |>\n  mutate(room_bin = ifelse(room_type == \"Entire home/apt\", 1, 0)) |>\n  group_by(ward) |>\n  slice_sample(prop = 0.2) |>\n  ungroup()\n\nward_intercept_model <- rstanarm::stan_glmer(\n  price ~ number_of_reviews + availability_365 + room_type + \n    (1 | ward),\n  data = airbnb_for_stan, family = gaussian,\n  adapt_delta = 0.999, chains = 3, iter = 3000*2, refresh = 0, seed = 320)\n\nward_interaction_model <- rstanarm::stan_glmer(\n  price ~ number_of_reviews + availability_365 + room_type + \n    (room_type | ward),\n  data = airbnb_for_stan, family = gaussian,\n  adapt_delta = 0.999, chains = 3, iter = 3000*2, refresh = 0, seed = 320)\n\nend_time <- Sys.time()\nprint(round(end_time- start_time))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 4 mins\n```\n:::\n:::\n\n\n## Diagnostics\n\n::: {.callout-note collapse=\"true\"}\n## Function\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-5_46a18615dc2dd5815b02ef426e767bd6'}\n\n```{.r .cell-code}\nmodel_diagnostics <- function(the_stan_model){\n  p1 <- bayesplot::mcmc_trace(the_stan_model, size = 0.1) +\n  labs(title = \"MCMC Traces\")\n  print(p1)\n  \n  p2 <- bayesplot::mcmc_dens_overlay(the_stan_model) +\n  labs(title = \"Density Plots\")\n  print(p2)\n  \n  p3 <- bayesplot::mcmc_acf(the_stan_model) +\n  labs(title = \"Autocorrelations\")\n  print(p3)\n  \n  # effective sample size\n  print(\"Effective Sample Size:\")\n  print(bayesplot::neff_ratio(the_stan_model))\n  \n  # split-R metric\n  print(\"R-Hat\")\n  print(bayesplot::rhat(the_stan_model))\n}\n```\n:::\n\n\n:::\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-6_1a40713ccc9c7617af724bc3346b99d6'}\n\n```{.r .cell-code}\nmodel_diagnostics(ward_intercept_model)\n```\n\n::: {.cell-output-display}\n![](18_neural_nets_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](18_neural_nets_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](18_neural_nets_files/figure-html/unnamed-chunk-6-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Effective Sample Size:\"\n                        (Intercept)                   number_of_reviews \n                          0.5086667                           0.9522222 \n                   availability_365               room_typePrivate room \n                          0.8895556                           0.7847778 \n              b[(Intercept) ward:A]               b[(Intercept) ward:B] \n                          0.6232222                           0.5092222 \n              b[(Intercept) ward:C]               b[(Intercept) ward:D] \n                          0.4440000                           0.4608889 \n              b[(Intercept) ward:E]               b[(Intercept) ward:F] \n                          0.3303333                           0.4488889 \n                              sigma Sigma[ward:(Intercept),(Intercept)] \n                          0.8438889                           0.3378889 \n[1] \"R-Hat\"\n                        (Intercept)                   number_of_reviews \n                          1.0002625                           0.9998291 \n                   availability_365               room_typePrivate room \n                          0.9998054                           0.9998069 \n              b[(Intercept) ward:A]               b[(Intercept) ward:B] \n                          1.0001120                           1.0001326 \n              b[(Intercept) ward:C]               b[(Intercept) ward:D] \n                          1.0000578                           0.9999769 \n              b[(Intercept) ward:E]               b[(Intercept) ward:F] \n                          1.0003429                           1.0003948 \n                              sigma Sigma[ward:(Intercept),(Intercept)] \n                          1.0000282                           1.0005024 \n```\n:::\n:::\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-7_9b564ab5e27b6e534697c3b83f4c4ba1'}\n\n```{.r .cell-code}\nmodel_diagnostics(ward_interaction_model)\n```\n\n::: {.cell-output-display}\n![](18_neural_nets_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](18_neural_nets_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](18_neural_nets_files/figure-html/unnamed-chunk-7-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Effective Sample Size:\"\n                                            (Intercept) \n                                              0.6875556 \n                                      number_of_reviews \n                                              1.1898889 \n                                       availability_365 \n                                              1.1043333 \n                                  room_typePrivate room \n                                              0.3803333 \n                                  b[(Intercept) ward:A] \n                                              0.7395556 \n                        b[room_typePrivate room ward:A] \n                                              0.4583333 \n                                  b[(Intercept) ward:B] \n                                              0.5922222 \n                        b[room_typePrivate room ward:B] \n                                              0.4535556 \n                                  b[(Intercept) ward:C] \n                                              0.6764444 \n                        b[room_typePrivate room ward:C] \n                                              0.4266667 \n                                  b[(Intercept) ward:D] \n                                              0.4473333 \n                        b[room_typePrivate room ward:D] \n                                              0.4472222 \n                                  b[(Intercept) ward:E] \n                                              0.5104444 \n                        b[room_typePrivate room ward:E] \n                                              0.4584444 \n                                  b[(Intercept) ward:F] \n                                              0.6493333 \n                        b[room_typePrivate room ward:F] \n                                              0.4303333 \n                                                  sigma \n                                              1.0692222 \n                    Sigma[ward:(Intercept),(Intercept)] \n                                              0.3853333 \n          Sigma[ward:room_typePrivate room,(Intercept)] \n                                              0.4280000 \nSigma[ward:room_typePrivate room,room_typePrivate room] \n                                              0.4431111 \n[1] \"R-Hat\"\n                                            (Intercept) \n                                              0.9998817 \n                                      number_of_reviews \n                                              0.9998938 \n                                       availability_365 \n                                              0.9999321 \n                                  room_typePrivate room \n                                              1.0003472 \n                                  b[(Intercept) ward:A] \n                                              0.9998446 \n                        b[room_typePrivate room ward:A] \n                                              1.0002946 \n                                  b[(Intercept) ward:B] \n                                              0.9999827 \n                        b[room_typePrivate room ward:B] \n                                              1.0003456 \n                                  b[(Intercept) ward:C] \n                                              0.9999604 \n                        b[room_typePrivate room ward:C] \n                                              1.0003508 \n                                  b[(Intercept) ward:D] \n                                              1.0000062 \n                        b[room_typePrivate room ward:D] \n                                              1.0001489 \n                                  b[(Intercept) ward:E] \n                                              1.0002141 \n                        b[room_typePrivate room ward:E] \n                                              1.0003427 \n                                  b[(Intercept) ward:F] \n                                              0.9998399 \n                        b[room_typePrivate room ward:F] \n                                              0.9999825 \n                                                  sigma \n                                              0.9998949 \n                    Sigma[ward:(Intercept),(Intercept)] \n                                              1.0004354 \n          Sigma[ward:room_typePrivate room,(Intercept)] \n                                              1.0002091 \nSigma[ward:room_typePrivate room,room_typePrivate room] \n                                              0.9997902 \n```\n:::\n:::\n\n\n## MAE\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-8_346f7a2fa3413d4fffd8f0624bb8a27f'}\n\n```{.r .cell-code}\nset.seed(320)\nbayesrules::prediction_summary(ward_intercept_model, data = airbnb_df) |>\n  mutate_if(is.numeric, round, digits = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     mae mae_scaled within_50 within_95\n1 67.536      0.362    0.8479    0.9785\n```\n:::\n:::\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-9_48ce2dfdbc50386d20f1baac2b214e81'}\n\n```{.r .cell-code}\nset.seed(320)\nbayesrules::prediction_summary(ward_interaction_model, data = airbnb_df) |>\n  mutate_if(is.numeric, round, digits = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      mae mae_scaled within_50 within_95\n1 54.5806     0.3202     0.796    0.9607\n```\n:::\n:::\n\n\n## PPC\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-10_55efcc465184b2746561c870a3aca807'}\n::: {.cell-output-display}\n![](18_neural_nets_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-11_11916284dce7ade53cf290a1326c4acf'}\n\n```{.r .cell-code}\np1 <- bayesplot::pp_check(ward_intercept_model) +\n  labs(title = \"Ward Intercept Model\", x = \"price\") +\n  theme_minimal() +\n  theme(axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        legend.position = \"none\")\np2 <- bayesplot::pp_check(ward_interaction_model) +\n  labs(title = \"Ward Interaction Model\", x = \"price\") +\n  theme_minimal() +\n  theme(axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        legend.position = \"bottom\")\n\np1 + p2\n```\n:::\n\n\n:::::\n\n\n# Model Statistics\n\n## Coefficients\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-12_47929d90a0345c6610bb7fe5d294e46e'}\n\n```{.r .cell-code}\nbroom.mixed::tidy(ward_intercept_model, \n                  effects = \"fixed\", #beta coefficients\n                  conf.int = TRUE, conf.level = 0.90) |>\n  mutate_if(is.numeric, round, digits = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  term                  estimate std.error conf.low conf.high\n  <chr>                    <dbl>     <dbl>    <dbl>     <dbl>\n1 (Intercept)            153.       35.3     93.2     212.   \n2 number_of_reviews       -0.128     0.195   -0.441     0.192\n3 availability_365         0.227     0.101    0.059     0.392\n4 room_typePrivate room  -72.3      23.9   -112.      -33.7  \n```\n:::\n:::\n\n\n* $\\beta_{0}$ (practically significant): when $X_{1} = X_{2} = 0$ and the Airbnb listing is for a whole house/apartment, the average price is about $186\n* $\\beta_{1}$ (practically significant): for each review of the location, the price decreases by about 15 cents.\n* $\\beta_{2}$ (practically significant): for every additional day that the location is available during the year, the price increases by about 13 cents.\n* $\\beta_{3}$ (practically significant): compared to the baseline of \"Entire house/apt\" locations, the private room listings tend to be about $115 cheaper.\n\n## Hierarchy\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-13_75ab16cd77ff98cf05612d0313e584f1'}\n\n```{.r .cell-code}\nbroom.mixed::tidy(ward_intercept_model, \n                  effects = \"ran_vals\", #values of randomness\n                  conf.int = TRUE, conf.level = 0.90) |>\n  mutate_if(is.numeric, round, digits = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  level group term        estimate std.error conf.low conf.high\n  <chr> <chr> <chr>          <dbl>     <dbl>    <dbl>     <dbl>\n1 A     ward  (Intercept)   -12.8       29.0   -72.8       36.4\n2 B     ward  (Intercept)   -23.7       31.2   -85.3       22.2\n3 C     ward  (Intercept)    -3.62      24.3   -50.9       42.3\n4 D     ward  (Intercept)     8.61      26.2   -36.4       62.1\n5 E     ward  (Intercept)    52.2       32.0     3.98     111. \n6 F     ward  (Intercept)   -15.7       26.2   -67.6       28.3\n```\n:::\n:::\n\n\n**Ward E** is the only one that is \"practically significant\" (based on the 90-percent credible intervals for the coefficients), and its coefficient shows how listings in that ward tend to be more expensive than the population average.\n\n\n## ANOVA\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-14_8d05b73750ab04305686b552609e9fbc'}\n\n```{.r .cell-code}\nvar_df <- broom.mixed::tidy(ward_intercept_model, \n                  effects = \"ran_pars\", #parameters of randomness\n                  conf.int = TRUE, conf.level = 0.90) |>\n  mutate_if(is.numeric, round, digits = 4)\n\nvar_df #print\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  term                    group    estimate\n  <chr>                   <chr>       <dbl>\n1 sd_(Intercept).ward     ward         54.9\n2 sd_Observation.Residual Residual    184. \n```\n:::\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n## Function\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-15_d5d6ca9f3c1f93070abdc5f9879267bc'}\n\n```{.r .cell-code}\nExtract_Variances <- function(V){\n  v1 <- unlist(V[1,3]^2 / (V[1,3]^2 + V[2,3]^2)) |> round(digits = 4)\n  v2 <- unlist(V[2,3]^2 / (V[1,3]^2 + V[2,3]^2)) |> round(digits = 4)\n  \n  print(paste0(\"Within Group Variance: \", v1))\n  print(paste0(\"Between Group Variance: \", v2))\n}\n```\n:::\n\n:::\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-16_f8d936a8d96f26cee07a7ed0ba2f6617'}\n\n```{.r .cell-code}\nExtract_Variances(var_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Within Group Variance: 0.0821\"\n[1] \"Between Group Variance: 0.9179\"\n```\n:::\n:::\n\n\n\n# Logistic Hierarchies\n\n::::: {.panel-tabset}\n\n## Stan\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-17_effd18373ee6d066d6feadace0ceb677'}\n\n```{.r .cell-code}\nairbnb_for_stan <- airbnb_df |>\n  mutate(room_bin = ifelse(room_type == \"Entire home/apt\", 1, 0)) |>\n  group_by(ward) |>\n  slice_sample(prop = 0.2) |>\n  ungroup()\n\nstart_time <- Sys.time()\n\nlogistic_hier_model <- rstanarm::stan_glmer(\n  room_bin ~ number_of_reviews + availability_365 + (1 | ward),\n  data = airbnb_for_stan, family = binomial,\n  chains = 3, iter = 4000*2, refresh = 0, seed = 320)\n\nend_time <- Sys.time()\nprint(round(end_time- start_time))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 32 secs\n```\n:::\n:::\n\n\n## Diagnostics\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-18_e738bd8ee4cb371811636191cda92990'}\n\n```{.r .cell-code}\nmodel_diagnostics(logistic_hier_model)\n```\n\n::: {.cell-output-display}\n![](18_neural_nets_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](18_neural_nets_files/figure-html/unnamed-chunk-18-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](18_neural_nets_files/figure-html/unnamed-chunk-18-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Effective Sample Size:\"\n                        (Intercept)                   number_of_reviews \n                          0.4682500                           0.8668333 \n                   availability_365               b[(Intercept) ward:A] \n                          0.9095833                           0.5275833 \n              b[(Intercept) ward:B]               b[(Intercept) ward:C] \n                          0.5355833                           0.4380000 \n              b[(Intercept) ward:D]               b[(Intercept) ward:E] \n                          0.4577500                           0.4185833 \n              b[(Intercept) ward:F] Sigma[ward:(Intercept),(Intercept)] \n                          0.4354167                           0.3841667 \n[1] \"R-Hat\"\n                        (Intercept)                   number_of_reviews \n                           1.000326                            1.000141 \n                   availability_365               b[(Intercept) ward:A] \n                           1.000032                            1.000171 \n              b[(Intercept) ward:B]               b[(Intercept) ward:C] \n                           1.000349                            1.000207 \n              b[(Intercept) ward:D]               b[(Intercept) ward:E] \n                           1.000331                            1.000029 \n              b[(Intercept) ward:F] Sigma[ward:(Intercept),(Intercept)] \n                           1.000179                            1.000765 \n```\n:::\n:::\n\n\n## Classification\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-19_c28825a679833781eab1e9e4bad6a800'}\n\n```{.r .cell-code}\nset.seed(320)\nclass_results <- bayesrules::classification_summary(\n  model = logistic_hier_model,\n  data = airbnb_for_stan,\n  cutoff = 0.55\n)\n```\n:::\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-20_ff78879779e9a54a76d79e10f171741c'}\n\n```{.r .cell-code}\nclass_results$confusion_matrix\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n y  0   1\n 0 38  62\n 1 32 134\n```\n:::\n:::\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-21_44ac359f968b271e2b74232d78c21313'}\n\n```{.r .cell-code}\nclass_results$accuracy_rates |> round(digits = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       \nsensitivity      0.8072\nspecificity      0.3800\noverall_accuracy 0.6466\n```\n:::\n:::\n\n\n:::::\n\n\n# Poisson Hierarchies\n\n::::: {.panel-tabset}\n\n## Stan\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-22_c5643e4d0089115210bc6a07dea83f48'}\n\n```{.r .cell-code}\nstart_time <- Sys.time()\n\nneg_bin_hier_model <- rstanarm::stan_glmer(\n  price ~ number_of_reviews + availability_365 + room_type + \n    (1 | ward),\n  data = airbnb_for_stan, family = neg_binomial_2,\n  chains = 3, iter = 4000*2, refresh = 0, seed = 320)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There were 2 divergent transitions after warmup. See\nhttps://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup\nto find out why this is a problem and how to eliminate them.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Examine the pairs() plot to diagnose sampling problems\n```\n:::\n\n```{.r .cell-code}\nend_time <- Sys.time()\nprint(round(end_time- start_time))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 44 secs\n```\n:::\n:::\n\n\n## Diagnostics\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-23_f9fccdb91e25aff3d71a241f7b068e55'}\n\n```{.r .cell-code}\nmodel_diagnostics(neg_bin_hier_model)\n```\n\n::: {.cell-output-display}\n![](18_neural_nets_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](18_neural_nets_files/figure-html/unnamed-chunk-23-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](18_neural_nets_files/figure-html/unnamed-chunk-23-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Effective Sample Size:\"\n                        (Intercept)                   number_of_reviews \n                          0.5618333                           1.0082500 \n                   availability_365               room_typePrivate room \n                          0.9248333                           1.1091667 \n              b[(Intercept) ward:A]               b[(Intercept) ward:B] \n                          0.5662500                           0.5501667 \n              b[(Intercept) ward:C]               b[(Intercept) ward:D] \n                          0.4396667                           0.4860000 \n              b[(Intercept) ward:E]               b[(Intercept) ward:F] \n                          0.3343333                           0.4588333 \n              reciprocal_dispersion Sigma[ward:(Intercept),(Intercept)] \n                          0.9117500                           0.2173333 \n[1] \"R-Hat\"\n                        (Intercept)                   number_of_reviews \n                          0.9999635                           0.9998766 \n                   availability_365               room_typePrivate room \n                          1.0001169                           0.9997772 \n              b[(Intercept) ward:A]               b[(Intercept) ward:B] \n                          1.0006149                           1.0002727 \n              b[(Intercept) ward:C]               b[(Intercept) ward:D] \n                          1.0004347                           1.0001468 \n              b[(Intercept) ward:E]               b[(Intercept) ward:F] \n                          1.0006933                           1.0001187 \n              reciprocal_dispersion Sigma[ward:(Intercept),(Intercept)] \n                          0.9999473                           1.0018798 \n```\n:::\n:::\n\n\n## MAE\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-24_fbf5d6d7d1f0316f12be839e8a57f3e1'}\n\n```{.r .cell-code}\nset.seed(320)\nbayesrules::prediction_summary(neg_bin_hier_model, data = airbnb_df) |>\n  mutate_if(is.numeric, round, digits = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      mae mae_scaled within_50 within_95\n1 56.0397     0.5393    0.6513    0.9703\n```\n:::\n:::\n\n\n## PPC\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-25_2a1b1d91905e477cdd19509619ecb5b7'}\n::: {.cell-output-display}\n![](18_neural_nets_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-26_88c44736076da52a50b1d718f1d0a799'}\n\n```{.r .cell-code}\nbayesplot::pp_check(neg_bin_hier_model) +\n  labs(title = \"Negative Binomial Model\", x = \"price\") +\n  theme_minimal() +\n  theme(axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        legend.position = \"none\")\n```\n:::\n\n\n:::::\n\n# Predictions\n\n::::: {.panel-tabset}\n\n## Viz\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-27_3a1420fd3a2ffc21e5cefba3bfe919e3'}\n::: {.cell-output-display}\n![](18_neural_nets_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-28_86c5ff908556e232002e68aa1070d684'}\n\n```{.r .cell-code}\nset.seed(320)\nward_preds <- rstanarm::posterior_predict(\n  neg_bin_hier_model, \n  newdata = data.frame(number_of_reviews = 100,\n                       availability_365 = 200,\n                       room_type = \"Entire home/apt\",\n                       ward = c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\")))\n\nbayesplot::mcmc_areas(ward_preds, prob = 0.8) +\n  labs(title = \"Posterior Distributions for Airbnb Prices\",\n       subtitle = \"Entire House with 100 reviews and 200 days/year availability\",\n       caption = \"SML 320\",\n       x = \"price\", y = \"ward\") +\n  scale_y_discrete(labels = c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"))\n```\n:::\n\n\n:::::\n\n\n# Deeper Hierarchies\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-29_7e610943bbcf86333e5e52076391fefe'}\n\n```{.r .cell-code}\ndeep_hier_model <- rstanarm::stan_glmer(\n  price ~ number_of_reviews + availability_365 + \n    (1 | room_type) + (1 | ward),\n  data = airbnb_df, family = gaussian,\n  chains = 4, iter = 5000*2, refresh = 0, seed = 320)\n```\n:::\n\n\n* **TODO**: actually run the code\n\n\n# BNNS\n\nHere, we briefly look at the `BLNN` package (Bayesian learning for neural networks).\n\n* vignette: https://github.com/BLNNdevs/BLNN/blob/master/vignettes/Classification_Modeling.Rmd\n\n## Architecture\n\n* `ncov = 3`: 2 input variables\n* `nout = 6`: 6 output variables (for the `ward`)\n* `hlayer_size = 8`: size of hidden layer\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-30_5dcc0cea5c7b11d12b9ddebae50b3ba3'}\n\n```{.r .cell-code}\nClassNet<-BLNN_Build(ncov = 3, nout = 6, hlayer_size = 8,\n                      actF = \"tanh\",\n                      costF = \"crossEntropy\",\n                      outF = \"softmax\",\n                      hp.Err = 10, hp.W1 = .5, hp.W2 = .5,\n                      hp.B1 = .5, hp.B2 = .5)\n```\n:::\n\n\n## Data Wrangling\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-31_7a427dc52ebc2782e192fd7963844d5a'}\n\n```{.r .cell-code}\nset.seed(320)\nairbnb_for_bnn <- airbnb_df |>\n  mutate(room_bin = ifelse(room_type == \"Entire home/apt\", 1, 0)) |>\n  select(ward, number_of_reviews, availability_365, room_bin) |>\n  group_by(ward) |>\n  slice_sample(prop = 0.3) |>\n  ungroup()\n```\n:::\n\n\n### Targets Matrix\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-32_0f29a6df588628cb401ba7033f4d80d1'}\n\n```{.r .cell-code}\ntarg <- matrix(0, \n               nrow = nrow(airbnb_for_bnn), \n               ncol = 6)\nlev <- as.numeric(as.factor(airbnb_for_bnn$ward))\nfor(i in 1:nrow(airbnb_for_bnn)){\n  targ[i, lev[i]]<-1\n}\ncolnames(targ) <- c(\"ward_A\", \"ward_B\", \"ward_C\", \"ward_D\", \"ward_E\", \"ward_F\")\ninput_data <- airbnb_for_bnn |>\n  select(number_of_reviews, availability_365, room_bin)\n\n# rescale data\ninput_data <- scale(input_data)\n```\n:::\n\n\nAlso consider rescaling numerical variables.\n\n### Train Network\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-33_31268b5648ae0d1ac931ca8895f169b2'}\n\n```{.r .cell-code}\nnnetBasesline <- nnet::nnet(input_data, \n                            targ, \n                            size = 3) #hidden layer size\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# weights:  36\ninitial  value 834.779501 \nfinal  value 402.000000 \nconverged\n```\n:::\n\n```{.r .cell-code}\nnnetPredictions <- predict(nnetBasesline)\n```\n:::\n\n\n## Hamiltonian Monte Carlo\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-34_78000902ea37a862e822630959182934'}\n\n```{.r .cell-code}\nstart_time <- Sys.time()\n\nClassHMC <- BLNN_Train(NET = ClassNet,\n                          x = input_data,\n                          y = targ,\n                          iter = 5000,\n                          chains = 3,\n                          algorithm = \"HMC\",\n                          display = 0, control = list(adapt_delta = 0.8,\n                                                      Lambda = 0.005,\n                                                      stepsize=5,\n                                                      gamma=2)\n                        )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitial Step size : 0.01953125 \nInitial Step size : 0.004882812 \nInitial Step size : 0.009765625 \n```\n:::\n\n```{.r .cell-code}\nend_time <- Sys.time()\nprint(round(end_time- start_time))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 2 mins\n```\n:::\n:::\n\n\n## Update Network\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-35_5091d1b684365942ddb7359804541d71'}\n\n```{.r .cell-code}\nstart_time <- Sys.time()\n\nClassHMC<-BLNN_Update(ClassNet, ClassHMC)\n\nend_time <- Sys.time()\nprint(round(end_time- start_time))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 0 secs\n```\n:::\n:::\n\n\n## Gather Predictions\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-36_ca33596f96aa61e74ed3f05377acddb8'}\n\n```{.r .cell-code}\nHMCpred <- BLNN_Predict(ClassNet, input_data)\n```\n:::\n\n\n## Examine Error\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-37_2b9dff12bc173a0ce9a982e8e27f82cd'}\n\n```{.r .cell-code}\nHMCpredClass <- matrix(0, \n                       nrow = nrow(airbnb_for_bnn), \n                       ncol = 6)\nlev <- as.numeric(as.factor(HMCpred))\nfor(i in 1:nrow(airbnb_for_bnn)){\n  HMCpredClass[i, lev[i]]<-1\n}\ncolnames(HMCpredClass) <- c(\"ward_A\", \"ward_B\", \"ward_C\", \"ward_D\", \"ward_E\", \"ward_F\")\n```\n:::\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-38_7fec8ec865940427f46b53c95a071ea4'}\n\n```{.r .cell-code}\ntarg_df <- data.frame(targ) |>\n  mutate(class = case_when(\n    ward_A == 1 ~ \"ward_A\",\n    ward_B == 1 ~ \"ward_B\",\n    ward_C == 1 ~ \"ward_C\",\n    ward_D == 1 ~ \"ward_D\",\n    ward_E == 1 ~ \"ward_E\",\n    ward_F == 1 ~ \"ward_F\",\n  ))\n\nHMCpredClass_df <- data.frame(HMCpredClass) |>\n  mutate(class = case_when(\n    ward_A == 1 ~ \"ward_A\",\n    ward_B == 1 ~ \"ward_B\",\n    ward_C == 1 ~ \"ward_C\",\n    ward_D == 1 ~ \"ward_D\",\n    ward_E == 1 ~ \"ward_E\",\n    ward_F == 1 ~ \"ward_F\",\n  ))\n\ntable(targ_df$class, HMCpredClass_df$class)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        \n         ward_A ward_B ward_C ward_D\n  ward_A      0     14     11      9\n  ward_B      1     13      4     23\n  ward_C      2     12     26     41\n  ward_D      5     20     23     17\n  ward_E      5     23     11     68\n  ward_F      2     20     11     41\n```\n:::\n:::\n\n\n\n\n\n\n\n\n# Footnotes\n\n* \n\n::: {.callout-note collapse=\"true\"}\n## Session Info\n\n\n::: {.cell hash='18_neural_nets_cache/html/unnamed-chunk-39_6dfaaff8a1425beed25c06fb13cb7520'}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] lubridate_1.9.3    forcats_1.0.0      stringr_1.5.1      dplyr_1.1.4       \n [5] purrr_1.0.2        readr_2.1.5        tidyr_1.3.1        tibble_3.2.1      \n [9] ggplot2_3.4.3      tidyverse_2.0.0    rstanarm_2.21.4    Rcpp_1.0.11       \n[13] rstan_2.32.5       StanHeaders_2.32.5 patchwork_1.1.2    nnet_7.3-19       \n[17] janitor_2.2.0      ggtext_0.1.2       BLNN_1.0           bayesrules_0.0.2  \n[21] bayesplot_1.10.0  \n\nloaded via a namespace (and not attached):\n  [1] tensorA_0.36.2       rstudioapi_0.15.0    jsonlite_1.8.7      \n  [4] magrittr_2.0.3       farver_2.1.1         nloptr_2.0.3        \n  [7] rmarkdown_2.24       vctrs_0.6.5          minqa_1.2.5         \n [10] base64enc_0.1-3      htmltools_0.5.6      distributional_0.3.2\n [13] curl_5.0.2           broom_1.0.5          parallelly_1.36.0   \n [16] htmlwidgets_1.6.2    plyr_1.8.8           zoo_1.8-12          \n [19] igraph_1.4.3         mime_0.12            lifecycle_1.0.4     \n [22] pkgconfig_2.0.3      colourpicker_1.2.0   Matrix_1.6-1.1      \n [25] R6_2.5.1             fastmap_1.1.1        future_1.32.0       \n [28] shiny_1.7.5          snakecase_0.11.0     digest_0.6.33       \n [31] colorspace_2.1-0     furrr_0.3.1          ps_1.7.5            \n [34] crosstalk_1.2.0      labeling_0.4.3       fansi_1.0.6         \n [37] timechange_0.3.0     abind_1.4-5          compiler_4.3.2      \n [40] proxy_0.4-27         bit64_4.0.5          withr_3.0.0         \n [43] backports_1.4.1      inline_0.3.19        shinystan_2.6.0     \n [46] QuickJSR_1.1.3       pkgbuild_1.4.0       broom.mixed_0.2.9.4 \n [49] MASS_7.3-60          gtools_3.9.4         loo_2.6.0           \n [52] tools_4.3.2          httpuv_1.6.11        threejs_0.3.3       \n [55] glue_1.6.2           callr_3.7.3          nlme_3.1-163        \n [58] promises_1.2.1       gridtext_0.1.5       grid_4.3.2          \n [61] checkmate_2.2.0      reshape2_1.4.4       generics_0.1.3      \n [64] gtable_0.3.4         tzdb_0.4.0           class_7.3-22        \n [67] hms_1.1.3            xml2_1.3.6           utf8_1.2.4          \n [70] pillar_1.9.0         markdown_1.8         vroom_1.6.5         \n [73] posterior_1.4.1      later_1.3.1          splines_4.3.2       \n [76] lattice_0.21-9       survival_3.5-7       bit_4.0.5           \n [79] tidyselect_1.2.0     miniUI_0.1.1.1       knitr_1.43          \n [82] gridExtra_2.3        V8_4.3.0             groupdata2_2.0.2    \n [85] stats4_4.3.2         xfun_0.40            matrixStats_1.0.0   \n [88] DT_0.28              stringi_1.8.3        yaml_2.3.8          \n [91] boot_1.3-28.1        evaluate_0.21        codetools_0.2-19    \n [94] cli_3.6.1            RcppParallel_5.1.7   shinythemes_1.2.0   \n [97] xtable_1.8-4         munsell_0.5.0        processx_3.8.1      \n[100] globals_0.16.2       parallel_4.3.2       rstantools_2.3.1    \n[103] ellipsis_0.3.2       prettyunits_1.2.0    dygraphs_1.1.1.6    \n[106] listenv_0.9.0        lme4_1.1-33          ggridges_0.5.4      \n[109] scales_1.2.1         xts_0.13.1           e1071_1.7-13        \n[112] crayon_1.5.2         rlang_1.1.1          shinyjs_2.1.0       \n```\n:::\n:::\n\n:::\n\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\t\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n\n:::\n\n::::\n\n\n::::: {.panel-tabset}\n\n\n\n:::::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}