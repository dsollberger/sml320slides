{
  "hash": "80036782a0a0a5a25d69e51e1f7603a4",
  "result": {
    "markdown": "---\ntitle: \"12: Evaluating Regression Models\"\nauthor: \"Derek Sollberger\"\ndate: \"2024-03-21\"\nexecute:\n  cache: true\n# format:\n#   revealjs:\n#     scrollable: true\nformat:\n  html:\n    toc: true\n# params:\n#   heavy_chunks: \"true\"\n  # heavy_chunks: \"false\"\n---\n\n\n\\newcommand{\\ds}{\\displaystyle}\n\n# Evaluating Regression Models\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n**Goal:** Discuss the fairness and accuracy of Bayesian regression models\t\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n\n:::\n\n::::\n\n# Data\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n* source: [TidyTuesday](https://github.com/rfordatascience/tidytuesday/tree/master/data/2022/2022-07-05)\n* 2022-07-05\n* [Pennington, Kate](https://matrix.berkeley.edu/research-article/kate-pennington-on-gentrification-and-displacement-in-san-francisco/) (2018). *Bay Area Craigslist Rental Housing Posts, 2000-2018*. Retrieved from [this site](https://github.com/katepennington/historic_bay_area_craigslist_housing_posts/blob/master/clean_2000_2018.csv.zip).\n\n    * Craigslist listings\t\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-1_79fd3daa5d20cd1992a71bb3f26a0a46'}\n\n```{.r .cell-code}\nlibrary(\"bayesrules\")\nlibrary(\"bayesplot\")\nlibrary(\"ggtext\")\nlibrary(\"rsample\")\nlibrary(\"rstan\")\nlibrary(\"rstanarm\")\nlibrary(\"tidyverse\")\n\nknitr::opts_chunk$set(echo = TRUE)\n\nrent_raw <- rent_raw <- readr::read_csv(\"rent.csv\")\nrent_df <- rent_raw |>\n  filter(price >= 800 & price <= 5000) |>\n  filter(sqft >= 500 & sqft <= 2500) |>\n  filter(year >= 2009)\n```\n:::\n\n:::\n\n::::\n\n\n# Fairness\n\n## How was the data collected?\n\n* Thousands of listings scraped from [Craiglist](https://www.craigslist.org/about/sites)---a freely available retail message board.\n\n* some lack of confidentiality:\n\n    * user names removed\n    * addresses could be scraped\n    \n## By whom and for what purpose was the data collected?\n\n* collected by [Dr Kate Pennington](https://www.katepennington.org/), research economist at the US Census Bureau in the Center for Economic Studies\n\n* [on Gentrification and Displacement in San Francisco](https://matrix.berkeley.edu/research-article/kate-pennington-on-gentrification-and-displacement-in-san-francisco/)\n\n## How might the results of the analysis, or the data collection itself, impact individuals and society?\n\n* research investigation, publication, and communication may affect rental market; but probably differently than other media\n\n## What biases might be baked into this analysis?\n\n* While [Craiglist](https://www.craigslist.org/about/sites) webscraping produced a sizeable data set, lack of information from other rental market communications may detract from diagnosing trends in market behavior.\n\n## Model Assumptions\n\n* rentals are *independent* observations (not true in reality)\n* linear model between predictor $X$ and price $Y$\n\n    * last time: $\\beta_{1} > 0$\n\n* At any $X$ value, $Y$ varies normally around $\\mu$ with consistent variability $\\sigma$.\n\n    * if these assumptions are valid, then the simulated posterior distribution should model the data well\n\n# Case Study: Price versus Time\n\n## Exploratory Data Analysis\n\n::::: {.panel-tabset}\n\n## Variables\n\n* response: `price` (monthly rent in USD)\n* predictor: `year` (discrete, 2009 to 2018)\n* commentary: the dataset allows a refined investigation of a time series, but we are going for an intentionally flawed analysis for this lecture session\n\n## Visualization\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-2_57bbe9fba38fee65841e6dbd94802de0'}\n::: {.cell-output-display}\n![](12_evaluating_regression_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-3_3a40b4a776457ee7b37da19a9732ddd5'}\n\n```{.r .cell-code}\nrent_df$year_fac <- factor(rent_df$year)\n\nrent_df |>\n  ggplot(aes(x = year_fac, y = price, color = year_fac)) +\n  ggbeeswarm::geom_quasirandom() +\n  labs(title = \"SF Rental Market\",\n       subtitle = \"2009 to 2018\",\n       caption = \"Source: TidyTuesday\",\n       x = \"year\",\n       y = \"monthly rent (USD)\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n:::\n\n\n## MLS\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-4_ae7012db775a7fb43481ca5d187630f6'}\n::: {.cell-output-display}\n![](12_evaluating_regression_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n:::::\n\n\n# rstanarm\n\nFor each parameter set $j\\in\\{1,2,...,20000\\}$, we predict the rent on property $i\\in\\{1,2,...,500\\}$ by drawing from the Normal data model evaluated at the observed year $X_i$:\n\n$$Y_{i}^{(j)} | \\beta_{0}, \\beta_{1}, \\sigma \\sim N\\left( \\mu^{(j)}, (\\sigma^{(j)})^{2}\\right) \\text{ with } \\mu^{(j)} = \\beta_{0}^{(j)} + \\beta_{1}^{(j)}X_{i}$$\n\n## MCMC\n\n* If the priors are not specified, `rstanarm` will create weakly informative [priors](https://cran.r-project.org/web/packages/rstanarm/vignettes/priors.html) through its `autoscale` process\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-5_1da74e3714f2c10b7eaf5a829f5c8bc8'}\n\n```{.r .cell-code}\nset.seed(320)\nrent_df_for_stan <- rent_df |>\n  slice_sample(prop = 0.10)\n\nmodel_area <- stan_glm(price ~ sqft, data = rent_df_for_stan,\n                       chains = 4, iter = 5000*2, refresh = 0, seed = 320)\nmodel_year <- stan_glm(price ~ year, data = rent_df_for_stan,\n                       chains = 4, iter = 5000*2, refresh = 0, seed = 320)\n```\n:::\n\n\n## Priors\n\n::::: {.panel-tabset}\n\n## area model\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-6_1739ea52bb38db175cd9ca9e93f3f774'}\n\n```{.r .cell-code}\nrstanarm::prior_summary(model_area)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nPriors for model 'model_area' \n------\nIntercept (after predictors centered)\n  Specified prior:\n    ~ normal(location = 2405, scale = 2.5)\n  Adjusted prior:\n    ~ normal(location = 2405, scale = 2227)\n\nCoefficients\n  Specified prior:\n    ~ normal(location = 0, scale = 2.5)\n  Adjusted prior:\n    ~ normal(location = 0, scale = 5.4)\n\nAuxiliary (sigma)\n  Specified prior:\n    ~ exponential(rate = 1)\n  Adjusted prior:\n    ~ exponential(rate = 0.0011)\n------\nSee help('prior_summary.stanreg') for more details\n```\n:::\n:::\n\n\n\n## year model\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-7_b1065c108f3d409835113fb2793f3f0d'}\n\n```{.r .cell-code}\nrstanarm::prior_summary(model_year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nPriors for model 'model_year' \n------\nIntercept (after predictors centered)\n  Specified prior:\n    ~ normal(location = 2405, scale = 2.5)\n  Adjusted prior:\n    ~ normal(location = 2405, scale = 2227)\n\nCoefficients\n  Specified prior:\n    ~ normal(location = 0, scale = 2.5)\n  Adjusted prior:\n    ~ normal(location = 0, scale = 1083)\n\nAuxiliary (sigma)\n  Specified prior:\n    ~ exponential(rate = 1)\n  Adjusted prior:\n    ~ exponential(rate = 0.0011)\n------\nSee help('prior_summary.stanreg') for more details\n```\n:::\n:::\n\n\n:::::\n\n# Reality Check\n\n## Area Model\n\n::::: {.panel-tabset}\n\n## One Model\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-8_39273918528db3ed4f7ba1d7052e4c3f'}\n\n```{.r .cell-code}\nmodel_area_df <- data.frame(model_area)\nfirst_set <- head(model_area_df, 1)\nfirst_set\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  X.Intercept.      sqft    sigma\n1     1408.002 0.9145315 805.5614\n```\n:::\n:::\n\n\n## Simulation\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-9_a176a6c14ea3d0ef22c7f2c80813e2bf'}\n\n```{.r .cell-code}\nbeta_0 <- first_set$`X.Intercept.`\nbeta_1 <- first_set$sqft\nsigma  <- first_set$sigma\nset.seed(320)\none_simulation <- rent_df_for_stan |>\n  mutate(mu = beta_0 + beta_1 * sqft,\n         simulated_price = rnorm(nrow(rent_df_for_stan), \n                                 mean = mu, sd = sigma)) |>\n  select(sqft, price, simulated_price)\n```\n:::\n\n\n## One Simulation\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-10_7cdf1a0dc54ec7477030c5911d46db4c'}\n\n```{.r .cell-code}\nhead(one_simulation, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 Ã— 3\n   sqft price simulated_price\n  <dbl> <dbl>           <dbl>\n1  1346  1390            963.\n2  1570  2950           1887.\n3   700  2595           1492.\n4  1046  2008           2984.\n5  1000  2650           1893.\n```\n:::\n:::\n\n\n## Density\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-11_54c9bf359637377776125d655fd92a7f'}\n::: {.cell-output-display}\n![](12_evaluating_regression_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-12_86ae20b09e486cb41c78a0d2c8cf4b9c'}\n\n```{.r .cell-code}\nsubtitle_string <- \"<span style='color:#BF40BF'>Real rents</span> versus <span style='color:#7f7f7f'>simulated rents</span>\"\n\none_simulation |>\n  ggplot() +\n  geom_density(aes(x = price), color = \"#BF40BF\", linewidth = 3) +\n  geom_density(aes(x = simulated_price), color = \"#7f7f7f\", linewidth = 2) +\n  labs(title = \"Model: price versus area\",\n       subtitle = subtitle_string,\n       caption = \"SML 320\") +\n  theme_minimal() +\n  theme(axis.title.y = element_blank(),\n        axis.text.y  = element_blank(),\n        axis.ticks.y = element_blank(),\n        plot.subtitle = element_markdown()) #use ggtext package\n```\n:::\n\n\n:::::\n\n## Year Model\n\n::::: {.panel-tabset}\n\n## One Model\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-13_d928aef6d51875163736c1cf81ec4093'}\n\n```{.r .cell-code}\nmodel_year_df <- data.frame(model_year)\nfirst_set <- head(model_year_df, 1)\nfirst_set\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  X.Intercept.     year    sigma\n1      -316870 158.5494 826.6045\n```\n:::\n:::\n\n\n## Simulation\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-14_8707f5854c416660e66ca0c54b2f957e'}\n\n```{.r .cell-code}\nbeta_0 <- first_set$`X.Intercept.`\nbeta_1 <- first_set$year\nsigma  <- first_set$sigma\nset.seed(320)\none_simulation <- rent_df_for_stan |>\n  mutate(mu = beta_0 + beta_1 * year,\n         simulated_price = rnorm(nrow(rent_df_for_stan), \n                                 mean = mu, sd = sigma)) |>\n  select(year, price, simulated_price)\n```\n:::\n\n\n## One Simulation\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-15_e79ee3b956a8543815a267454553d4f2'}\n\n```{.r .cell-code}\nhead(one_simulation, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 Ã— 3\n   year price simulated_price\n  <dbl> <dbl>           <dbl>\n1  2014  3815            729.\n2  2012  1177           1149.\n3  2012  1888           1561.\n4  2012  2500           2767.\n5  2016  4150           2325.\n```\n:::\n:::\n\n\n## Density\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-16_c477d6881c05e9166b8248c58a34dfa8'}\n::: {.cell-output-display}\n![](12_evaluating_regression_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-17_98cca44ca14ca98c952d38b6eb56985d'}\n\n```{.r .cell-code}\nsubtitle_string <- \"<span style='color:#BF40BF'>Real rents</span> versus <span style='color:#7f7f7f'>simulated rents</span>\"\n\none_simulation |>\n  ggplot() +\n  geom_density(aes(x = price), color = \"#BF40BF\", linewidth = 3) +\n  geom_density(aes(x = simulated_price), color = \"#7f7f7f\", linewidth = 2) +\n  labs(title = \"Model: price versus year\",\n       subtitle = subtitle_string,\n       caption = \"SML 320\") +\n  theme_minimal() +\n  theme(axis.title.y = element_blank(),\n        axis.text.y  = element_blank(),\n        axis.ticks.y = element_blank(),\n        plot.subtitle = element_markdown()) #use ggtext package\n```\n:::\n\n\n:::::\n\n\n# PPC\n\nThe `ppcheck()` command in the `bayesplot` package allows us to visually perform a **posterior predictive check**\n\n::::: {.panel-tabset}\n\n## Area Model\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-18_123ce7c821b65861d6b86e09aaf53c8a'}\n::: {.cell-output-display}\n![](12_evaluating_regression_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-19_4f6664a13d01861cd7503e4cc14ba1a0'}\n\n```{.r .cell-code}\nbayesplot::pp_check(model_area, nreps = 50) +\n  labs(title = \"Posterior Predictive Check\",\n       subtitle = \"Model: price versus area\",\n       caption = \"SML 320\")\n```\n:::\n\n\n## Year Model\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-20_e50bb7275011e2605a726c07a131be52'}\n::: {.cell-output-display}\n![](12_evaluating_regression_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-21_c4649cdf61b0055abd1e7b57e9df9eee'}\n\n```{.r .cell-code}\nbayesplot::pp_check(model_year, nreps = 50) +\n  labs(title = \"Posterior Predictive Check\",\n       subtitle = \"Model: price versus year\",\n       caption = \"SML 320\")\n```\n:::\n\n\n:::::\n\n# Adjustments\n\n## Different Data Structure\n\n* Normal\n* Poisson\n* Negative Binomial\n* Binomial\n* etc.\n\n## Transformations\n\n* transform $Y$:\n$$g(Y_{i}) | \\beta_{0}, \\beta_{1}, \\sigma \\sim N(\\mu, \\sigma^{2}) \\text{ with } \\mu_{i} = \\beta_{0} + \\beta_{1}X_{i}$$\n* transform $X$:\n$$Y_{i} | \\beta_{0}, \\beta_{1}, \\sigma \\sim N(\\mu, \\sigma^{2}) \\text{ with } \\mu_{i} = \\beta_{0} + \\beta_{1}h(X_{i})$$\n* transform both $X$ and $Y$:\n$$g(Y_{i}) | \\beta_{0}, \\beta_{1}, \\sigma \\sim N(\\mu, \\sigma^{2}) \\text{ with } \\mu_{i} = \\beta_{0} + \\beta_{1}h(X_{i})$$\n\nwhere functions $g,h$ might take forms like $\\log(X), \\sqrt{X}, X^{2}, X^{3},$ etc.\n\n# Accuracy\n\n## Predictions\n\nSimilar to the `predict` command in base-R, the `posterior_predict` command in `rstanarm` takes a model and a data frame.\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-22_738abecff695ee51c609f72597e63b58'}\n\n```{.r .cell-code}\nmodel_area_predictions <- rstanarm::posterior_predict(\n  model_area, newdata = rent_df_for_stan\n)\n```\n:::\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-23_d9afe15f8068fe3c771bad69b66b0893'}\n\n```{.r .cell-code}\nmodel_year_predictions <- rstanarm::posterior_predict(\n  model_year, newdata = rent_df_for_stan\n)\n```\n:::\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-24_15f0a2c49945d9e08adc5d465792794f'}\n\n```{.r .cell-code}\ndim(model_area_predictions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20000  5514\n```\n:::\n:::\n\n\n## Metrics\n\n* **median absolute error**\n\n$$\\text{MAE} = \\text{median}|Y_{i} - Y_{i}^{'}|$$\n\n* **scaled median absolute error**\n\n$$\\text{MAE scaled} = \\text{median}\\frac{|Y_{i} - Y_{i}^{'}|}{\\text{sd}_{i}}$$\n\n* **within 50**: proportion of observed values $Y_{i}$ that fall within their 50\\% posterior prediction interval\n* **within 95**: proportion of observed values $Y_{i}$ that fall within their 95\\% posterior prediction interval\n\n## Posterior Predictive Summaries\n\nThe textbook authors made another helper function in their `bayesrules` package called `prediction_summary`\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-25_efea011744cd7195b154ce002d0b833a'}\n\n```{.r .cell-code}\nset.seed(320)\nrent_df_for_ML <- rent_df |>\n  slice_sample(prop = 0.01)\nbayesrules::prediction_summary(model_area, \n                               data = rent_df_for_ML)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       mae mae_scaled within_50 within_95\n1 529.2686   0.649922 0.5172414 0.9491833\n```\n:::\n:::\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-26_d8d7aad261804788e1279d42df41544f'}\n\n```{.r .cell-code}\nbayesrules::prediction_summary(model_year, \n                               data = rent_df_for_ML)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       mae mae_scaled within_50 within_95\n1 566.7108  0.6837057 0.4936479 0.9455535\n```\n:::\n:::\n\n\n\n# Machine Learning\n\n## Training and Testing Sets\n\n* allocate about 75\\% of observations into a **training set**\n\n    * build models from the training set\n    \n* allocate other 25\\% of observations into a **testing set**\n\n    * measure error on the testing set\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-27_eb5c70edc8075206a10a742e1b0c15d8'}\n\n```{.r .cell-code}\nrent_split <- rsample::initial_split(rent_df_for_ML)\nrent_train <- rsample::training(rent_split) #about 75% of observations\nrent_test  <- rsample::testing(rent_split)  #about 25% of observations\n```\n:::\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-28_17ccbc49462b3e6b8281d4a3c6bcc1af'}\n\n```{.r .cell-code}\nsubtitle_string <- \"<span style='color:#7f7f7f'>Training data</span> and <span style='color:#FF0000'>testing data</span>\"\n\nrent_train |>\n    ggplot(aes(x = sqft, y = price)) +\n    geom_point(color = \"#7f7f7f\") +\n    geom_smooth(method = \"lm\", color = \"black\", se = FALSE) +\n    geom_point(aes(x = sqft, y = price),\n               color = \"#FF0000\", data = rent_test, size = 4) +\n    labs(title = \"Machine Learning on SF Rent Data\",\n         subtitle = subtitle_string,\n         caption = \"Source: Tidy Tuesday\",\n         x = \"area (square feet)\",\n         y = \"price (USD)\") +\n    theme_minimal() +\n    theme(plot.subtitle = element_markdown())\n```\n\n::: {.cell-output-display}\n![](12_evaluating_regression_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n## Bias Variance Trade-Off\n\n![bias-variance trade-off](bias_variance.png)\n\n[image source](https://towardsdatascience.com/bias-variance-dilemma-74e5f1f52b12)\n\n## Cross Validation\n\nBetter measurement of errors comes from **cross-validation**\n\n![cross validation](cross_validation.png)\n\n[image source](https://towardsdatascience.com/bias-variance-dilemma-74e5f1f52b12)\n\n## Training and Testing Data\n\n![training and testing sets](ML_reg_lines.gif)\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-29_b1db9d944e5fa15f50d00ae88264cbbb'}\n\n```{.r .cell-code}\nsubtitle_string <- \"<span style='color:#7f7f7f'>Training data</span> and <span style='color:#FF0000'>testing data</span>\"\n\nfor(i in 1:25){\n  \n  rent_split <- rsample::initial_split(rent_df_for_ML)\n  rent_train <- rsample::training(rent_split) #about 75% of observations\n  rent_test  <- rsample::testing(rent_split)  #about 25% of observations\n  \n  this_plot <- rent_train |>\n    ggplot(aes(x = sqft, y = price)) +\n    geom_point(color = \"#7f7f7f\") +\n    geom_smooth(method = \"lm\", color = \"black\", se = FALSE) +\n    geom_point(aes(x = sqft, y = price),\n               color = \"#FF0000\", data = rent_test, size = 4) +\n    labs(title = \"Machine Learning on SF Rent Data\",\n         subtitle = subtitle_string,\n         caption = \"Source: Tidy Tuesday\",\n         x = \"area (square feet)\",\n         y = \"price (USD)\") +\n    theme_minimal() +\n    theme(plot.subtitle = element_markdown()) #use ggtext package\n  \n  ggsave(filename = paste0(\"for_animations/ML_reg_plot_\", i, \".png\"),\n         plot = this_plot)\n}\n\n# then combined using the website https://ezgif.com/\n```\n:::\n\n\n## Cross Validation through bayesrules\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-30_2348ea2b6c9e2a5d64cae0fd16b42722'}\n\n```{.r .cell-code}\nset.seed(320)\n\nmodel_area_cv <- bayesrules::prediction_summary_cv(\n  model = model_area, data = rent_df_for_ML, k = 10\n)\n\nmodel_year_cv <- bayesrules::prediction_summary_cv(\n  model = model_year, data = rent_df_for_ML, k = 10\n)\n\nmodel_year_cv$folds\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   fold      mae mae_scaled within_50 within_95\n1     1 565.1712  0.6681426 0.5000000 0.9821429\n2     2 483.4587  0.5717974 0.6363636 0.9454545\n3     3 492.0445  0.5862028 0.5454545 0.9272727\n4     4 641.4328  0.7601855 0.4363636 0.9818182\n5     5 666.7055  0.7885234 0.3636364 0.9818182\n6     6 584.7050  0.6943528 0.4909091 0.9454545\n7     7 715.9861  0.8555493 0.4181818 0.9454545\n8     8 483.1197  0.5810148 0.5818182 0.9272727\n9     9 676.2278  0.8031427 0.4363636 0.9272727\n10   10 463.2350  0.5560119 0.5454545 0.9272727\n```\n:::\n:::\n\n\n## Cross-Validated\n\nThe `prediction_summary_cv` function in the `bayesrules` package will also average the results across all $k$ folds and store that information into `cv`.\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-31_0e118a94410d96b232670c9a746ed100'}\n\n```{.r .cell-code}\nmodel_area_cv$cv\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       mae mae_scaled within_50 within_95\n1 519.9732  0.6470611 0.5244156 0.9474675\n```\n:::\n:::\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-32_99ff267f6a2d8fc688d49774e62d95e2'}\n\n```{.r .cell-code}\nmodel_year_cv$cv\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       mae mae_scaled within_50 within_95\n1 577.2086  0.6864923 0.4954545 0.9491234\n```\n:::\n:::\n\n\n# Quo Vadimus\n\nSo far, according to the median absolute errors, `year` is a worse predictor variable than `sqft`.\n\n* multivariate models and interaction terms\n* Poisson regression, negative binomial\n* logistic regression, naive Bayes\n\n\n# Footnotes\n\n* [Bias Variance Dilemma](https://towardsdatascience.com/bias-variance-dilemma-74e5f1f52b12) by Zaid Alissa Almaliki\n* more about `rstanarm` [priors](https://cran.r-project.org/web/packages/rstanarm/vignettes/priors.html)\n\n::: {.callout-note collapse=\"true\"}\n## Session Info\n\n\n::: {.cell hash='12_evaluating_regression_cache/html/unnamed-chunk-33_9187123b5b599779fea633f4172713c9'}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] rsample_1.1.1       ggtext_0.1.2        lubridate_1.9.3    \n [4] forcats_1.0.0       stringr_1.5.1       dplyr_1.1.4        \n [7] purrr_1.0.2         readr_2.1.5         tidyr_1.3.1        \n[10] tibble_3.2.1        ggplot2_3.4.3       tidyverse_2.0.0    \n[13] rstanarm_2.21.4     Rcpp_1.0.11         rstan_2.32.5       \n[16] StanHeaders_2.32.5  patchwork_1.1.2     broom.mixed_0.2.9.4\n[19] bayesplot_1.10.0    bayesrules_0.0.2   \n\nloaded via a namespace (and not attached):\n  [1] rstudioapi_0.15.0  jsonlite_1.8.7     magrittr_2.0.3    \n  [4] farver_2.1.1       nloptr_2.0.3       rmarkdown_2.24    \n  [7] vctrs_0.6.5        minqa_1.2.5        base64enc_0.1-3   \n [10] janitor_2.2.0      htmltools_0.5.6    curl_5.0.2        \n [13] broom_1.0.5        parallelly_1.36.0  htmlwidgets_1.6.2 \n [16] plyr_1.8.8         zoo_1.8-12         commonmark_1.9.0  \n [19] igraph_1.4.3       mime_0.12          lifecycle_1.0.4   \n [22] pkgconfig_2.0.3    colourpicker_1.2.0 Matrix_1.6-1.1    \n [25] R6_2.5.1           fastmap_1.1.1      future_1.32.0     \n [28] shiny_1.7.5        snakecase_0.11.0   digest_0.6.33     \n [31] colorspace_2.1-0   furrr_0.3.1        ps_1.7.5          \n [34] crosstalk_1.2.0    labeling_0.4.3     fansi_1.0.6       \n [37] timechange_0.3.0   mgcv_1.9-0         compiler_4.3.2    \n [40] proxy_0.4-27       withr_3.0.0        backports_1.4.1   \n [43] inline_0.3.19      shinystan_2.6.0    QuickJSR_1.1.3    \n [46] pkgbuild_1.4.0     MASS_7.3-60        gtools_3.9.4      \n [49] loo_2.6.0          tools_4.3.2        httpuv_1.6.11     \n [52] threejs_0.3.3      glue_1.6.2         callr_3.7.3       \n [55] nlme_3.1-163       promises_1.2.1     gridtext_0.1.5    \n [58] grid_4.3.2         reshape2_1.4.4     generics_0.1.3    \n [61] gtable_0.3.4       tzdb_0.4.0         class_7.3-22      \n [64] hms_1.1.3          xml2_1.3.6         utf8_1.2.4        \n [67] pillar_1.9.0       markdown_1.8       later_1.3.1       \n [70] splines_4.3.2      lattice_0.21-9     survival_3.5-7    \n [73] tidyselect_1.2.0   miniUI_0.1.1.1     knitr_1.43        \n [76] gridExtra_2.3      V8_4.3.0           groupdata2_2.0.2  \n [79] stats4_4.3.2       xfun_0.40          matrixStats_1.0.0 \n [82] DT_0.28            stringi_1.8.3      yaml_2.3.8        \n [85] boot_1.3-28.1      evaluate_0.21      codetools_0.2-19  \n [88] cli_3.6.1          RcppParallel_5.1.7 shinythemes_1.2.0 \n [91] xtable_1.8-4       munsell_0.5.0      processx_3.8.1    \n [94] globals_0.16.2     parallel_4.3.2     rstantools_2.3.1  \n [97] ellipsis_0.3.2     prettyunits_1.2.0  dygraphs_1.1.1.6  \n[100] lme4_1.1-33        listenv_0.9.0      scales_1.2.1      \n[103] xts_0.13.1         e1071_1.7-13       crayon_1.5.2      \n[106] rlang_1.1.1        shinyjs_2.1.0     \n```\n:::\n:::\n\n:::\n\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\t\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n\n:::\n\n::::\n\n\n\n::::: {.panel-tabset}\n\n\n\n:::::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}